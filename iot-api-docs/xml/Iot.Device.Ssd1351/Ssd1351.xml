<Type Name="Ssd1351" FullName="Iot.Device.Ssd1351.Ssd1351">
  <TypeSignature Language="C#" Value="public class Ssd1351 : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Ssd1351 extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Iot.Device.Ssd1351.Ssd1351" />
  <TypeSignature Language="VB.NET" Value="Public Class Ssd1351&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type Ssd1351 = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Iot.Device.Bindings</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A single-chip CMOS OLED/PLED driver with controller for organic/polymer
            light emitting diode dot-matrix graphic display system.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ssd1351 (System.Device.Spi.SpiDevice spiDevice, int dataCommandPin, int resetPin, int spiBufferSize = 4096, System.Device.Gpio.GpioController gpioController = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Device.Spi.SpiDevice spiDevice, int32 dataCommandPin, int32 resetPin, int32 spiBufferSize, class System.Device.Gpio.GpioController gpioController) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.#ctor(System.Device.Spi.SpiDevice,System.Int32,System.Int32,System.Int32,System.Device.Gpio.GpioController)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (spiDevice As SpiDevice, dataCommandPin As Integer, resetPin As Integer, Optional spiBufferSize As Integer = 4096, Optional gpioController As GpioController = Nothing)" />
      <MemberSignature Language="F#" Value="new Iot.Device.Ssd1351.Ssd1351 : System.Device.Spi.SpiDevice * int * int * int * System.Device.Gpio.GpioController -&gt; Iot.Device.Ssd1351.Ssd1351" Usage="new Iot.Device.Ssd1351.Ssd1351 (spiDevice, dataCommandPin, resetPin, spiBufferSize, gpioController)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="spiDevice" Type="System.Device.Spi.SpiDevice" Index="0" FrameworkAlternate="iot-dotnet-1.0" />
        <Parameter Name="dataCommandPin" Type="System.Int32" Index="1" FrameworkAlternate="iot-dotnet-1.0" />
        <Parameter Name="resetPin" Type="System.Int32" Index="2" FrameworkAlternate="iot-dotnet-1.0" />
        <Parameter Name="spiBufferSize" Type="System.Int32" Index="3" FrameworkAlternate="iot-dotnet-1.0" />
        <Parameter Name="gpioController" Type="System.Device.Gpio.GpioController" Index="4" FrameworkAlternate="iot-dotnet-1.0" />
      </Parameters>
      <Docs>
        <param name="spiDevice">To be added.</param>
        <param name="dataCommandPin">To be added.</param>
        <param name="resetPin">To be added.</param>
        <param name="spiBufferSize">To be added.</param>
        <param name="gpioController">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ssd1351 (System.Device.Spi.SpiDevice spiDevice, int dataCommandPin, int resetPin, int spiBufferSize = 4096, System.Device.Gpio.GpioController? gpioController = default, bool shouldDispose = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Device.Spi.SpiDevice spiDevice, int32 dataCommandPin, int32 resetPin, int32 spiBufferSize, class System.Device.Gpio.GpioController gpioController, bool shouldDispose) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.#ctor(System.Device.Spi.SpiDevice,System.Int32,System.Int32,System.Int32,System.Device.Gpio.GpioController,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (spiDevice As SpiDevice, dataCommandPin As Integer, resetPin As Integer, Optional spiBufferSize As Integer = 4096, Optional gpioController As GpioController = Nothing, Optional shouldDispose As Boolean = true)" />
      <MemberSignature Language="F#" Value="new Iot.Device.Ssd1351.Ssd1351 : System.Device.Spi.SpiDevice * int * int * int * System.Device.Gpio.GpioController * bool -&gt; Iot.Device.Ssd1351.Ssd1351" Usage="new Iot.Device.Ssd1351.Ssd1351 (spiDevice, dataCommandPin, resetPin, spiBufferSize, gpioController, shouldDispose)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="spiDevice" Type="System.Device.Spi.SpiDevice" Index="0" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
        <Parameter Name="dataCommandPin" Type="System.Int32" Index="1" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
        <Parameter Name="resetPin" Type="System.Int32" Index="2" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
        <Parameter Name="spiBufferSize" Type="System.Int32" Index="3" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
        <Parameter Name="gpioController" Type="System.Device.Gpio.GpioController" Index="4" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
        <Parameter Name="shouldDispose" Type="System.Boolean" Index="5" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="spiDevice">The SPI device used for communication. This Spi device will be displed along with the Ssd1351 device.</param>
        <param name="gpioController">The GPIO controller used for communication and controls the the <paramref name="resetPin" /> and the <paramref name="dataCommandPin" />
            If no Gpio controller is passed in then a default one will be created and disposed when Ssd1351 device is disposed.</param>
        <param name="dataCommandPin">The id of the GPIO pin used to control the DC line (data/command).</param>
        <param name="resetPin">The id of the GPIO pin used to control the /RESET line (data/command).</param>
        <param name="spiBufferSize">The size of the SPI buffer. If data larger than the buffer is sent then it is split up into multiple transmissions. The default value is 4096.</param>
        <param name="shouldDispose">True to dispose the Gpio Controller</param>
        <summary>
            Initializes new instance of Ssd1351 device that will communicate using SPI bus.
            A single-chip CMOS OLED/PLED driver with controller for organic/polymer
            light emitting diode dot-matrix graphic display system.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearScreen">
      <MemberSignature Language="C#" Value="public void ClearScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.ClearScreen" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearScreen ()" />
      <MemberSignature Language="F#" Value="member this.ClearScreen : unit -&gt; unit" Usage="ssd1351.ClearScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clears screen
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="ssd1351.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FillRect">
      <MemberSignature Language="C#" Value="public void FillRect (System.Drawing.Color color, byte x, byte y, byte w, byte h);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRect(valuetype System.Drawing.Color color, unsigned int8 x, unsigned int8 y, unsigned int8 w, unsigned int8 h) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.FillRect(System.Drawing.Color,System.Byte,System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FillRect (color As Color, x As Byte, y As Byte, w As Byte, h As Byte)" />
      <MemberSignature Language="F#" Value="member this.FillRect : System.Drawing.Color * byte * byte * byte * byte -&gt; unit" Usage="ssd1351.FillRect (color, x, y, w, h)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="x" Type="System.Byte" />
        <Parameter Name="y" Type="System.Byte" />
        <Parameter Name="w" Type="System.Byte" />
        <Parameter Name="h" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="color">The color to fill the rectangle with.</param>
        <param name="x">The x co-ordinate of the point to start the rectangle at in pixels (0..126 for the Ssd1351 where 0 represents the leftmost pixel).</param>
        <param name="y">The y co-ordinate of the point to start the rectangle at in pixles (0..126 for the Ssd1351 where 0 represents the topmost pixel).</param>
        <param name="w">The width of the rectangle in pixels (1..127 for the Ssd1351).</param>
        <param name="h">The height of the rectangle in pixels (1..127 for the Ssd1351).</param>
        <summary>
            Send filled rectangle to the ssd1351 display.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBitmapPixelData">
      <MemberSignature Language="C#" Value="public Span&lt;byte&gt; GetBitmapPixelData (Iot.Device.Graphics.BitmapImage bm, System.Drawing.Rectangle sourceRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Span`1&lt;unsigned int8&gt; GetBitmapPixelData(class Iot.Device.Graphics.BitmapImage bm, valuetype System.Drawing.Rectangle sourceRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.GetBitmapPixelData(Iot.Device.Graphics.BitmapImage,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBitmapPixelData (bm As BitmapImage, sourceRect As Rectangle) As Span(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.GetBitmapPixelData : Iot.Device.Graphics.BitmapImage * System.Drawing.Rectangle -&gt; Span&lt;byte&gt;" Usage="ssd1351.GetBitmapPixelData (bm, sourceRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bm" Type="Iot.Device.Graphics.BitmapImage" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="sourceRect" Type="System.Drawing.Rectangle" Index="1" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="bm">The bitmap to be sent to the display controller note that only Pixel Format Format32bppArgb is supported.</param>
        <param name="sourceRect">A rectangle that defines where in the bitmap data is to be converted from.</param>
        <summary>
            Convert a bitmap into an array of pixel data suitable for sending to the display
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBitmapPixelData">
      <MemberSignature Language="C#" Value="public Span&lt;byte&gt; GetBitmapPixelData (System.Drawing.Bitmap bm, System.Drawing.Rectangle sourceRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Span`1&lt;unsigned int8&gt; GetBitmapPixelData(class System.Drawing.Bitmap bm, valuetype System.Drawing.Rectangle sourceRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.GetBitmapPixelData(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBitmapPixelData (bm As Bitmap, sourceRect As Rectangle) As Span(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.GetBitmapPixelData : System.Drawing.Bitmap * System.Drawing.Rectangle -&gt; Span&lt;byte&gt;" Usage="ssd1351.GetBitmapPixelData (bm, sourceRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bm" Type="System.Drawing.Bitmap" Index="0" FrameworkAlternate="iot-dotnet-1.0;iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
        <Parameter Name="sourceRect" Type="System.Drawing.Rectangle" Index="1" FrameworkAlternate="iot-dotnet-1.0;iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
      </Parameters>
      <Docs>
        <param name="bm">The bitmap to be sent to the display controller note that only Pixel Format Format32bppArgb is supported.</param>
        <param name="sourceRect">A rectangle that defines where in the bitmap data is to be converted from.</param>
        <summary>
            Convert a bitmap into an array of pixel data suitable for sending to the display
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="F#" Value="member this.Lock : unit -&gt; unit" Usage="ssd1351.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This command is used to lock the OLED driver IC from accepting any command except itself.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeAccessible">
      <MemberSignature Language="C#" Value="public void MakeAccessible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeAccessible() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.MakeAccessible" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeAccessible ()" />
      <MemberSignature Language="F#" Value="member this.MakeAccessible : unit -&gt; unit" Usage="ssd1351.MakeAccessible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Make commands A2,B1,B3,BB,BE,C1 accessible in the unlocked state
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeInaccessible">
      <MemberSignature Language="C#" Value="public void MakeInaccessible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeInaccessible() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.MakeInaccessible" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeInaccessible ()" />
      <MemberSignature Language="F#" Value="member this.MakeInaccessible : unit -&gt; unit" Usage="ssd1351.MakeInaccessible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             Make commands A2,B1,B3,BB,BE,C1 inaccessible in both lock and unlock state
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDisplayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ResetDisplayAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ResetDisplayAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.ResetDisplayAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ResetDisplayAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.ResetDisplayAsync : unit -&gt; System.Threading.Tasks.Task" Usage="ssd1351.ResetDisplayAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resets the display.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBitmap">
      <MemberSignature Language="C#" Value="public void SendBitmap (Iot.Device.Graphics.BitmapImage bm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendBitmap(class Iot.Device.Graphics.BitmapImage bm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SendBitmap(Iot.Device.Graphics.BitmapImage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendBitmap (bm As BitmapImage)" />
      <MemberSignature Language="F#" Value="member this.SendBitmap : Iot.Device.Graphics.BitmapImage -&gt; unit" Usage="ssd1351.SendBitmap bm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bm" Type="Iot.Device.Graphics.BitmapImage" Index="0" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="bm">The bitmap to be sent to the display controller note that only Pixel Format Format32bppArgb is supported.</param>
        <summary>
            Send a bitmap to the ssd1351 display specifying the starting position and destination clipping rectangle.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBitmap">
      <MemberSignature Language="C#" Value="public void SendBitmap (System.Drawing.Bitmap bm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendBitmap(class System.Drawing.Bitmap bm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SendBitmap(System.Drawing.Bitmap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendBitmap (bm As Bitmap)" />
      <MemberSignature Language="F#" Value="member this.SendBitmap : System.Drawing.Bitmap -&gt; unit" Usage="ssd1351.SendBitmap bm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bm" Type="System.Drawing.Bitmap" Index="0" FrameworkAlternate="iot-dotnet-1.0;iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
      </Parameters>
      <Docs>
        <param name="bm">The bitmap to be sent to the display controller note that only Pixel Format Format32bppArgb is supported.</param>
        <summary>
            Send a bitmap to the ssd1351 display specifying the starting position and destination clipping rectangle.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBitmap">
      <MemberSignature Language="C#" Value="public void SendBitmap (Iot.Device.Graphics.BitmapImage bm, System.Drawing.Rectangle updateRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendBitmap(class Iot.Device.Graphics.BitmapImage bm, valuetype System.Drawing.Rectangle updateRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SendBitmap(Iot.Device.Graphics.BitmapImage,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendBitmap (bm As BitmapImage, updateRect As Rectangle)" />
      <MemberSignature Language="F#" Value="member this.SendBitmap : Iot.Device.Graphics.BitmapImage * System.Drawing.Rectangle -&gt; unit" Usage="ssd1351.SendBitmap (bm, updateRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bm" Type="Iot.Device.Graphics.BitmapImage" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="updateRect" Type="System.Drawing.Rectangle" Index="1" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="bm">The bitmap to be sent to the display controller note that only Pixel Format Format32bppArgb is supported.</param>
        <param name="updateRect">A rectangle that defines where in the display the bitmap is written. Note that no scaling is done.</param>
        <summary>
            Send a bitmap to the ssd1351 display specifying the starting position and destination clipping rectangle.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBitmap">
      <MemberSignature Language="C#" Value="public void SendBitmap (System.Drawing.Bitmap bm, System.Drawing.Rectangle updateRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendBitmap(class System.Drawing.Bitmap bm, valuetype System.Drawing.Rectangle updateRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SendBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendBitmap (bm As Bitmap, updateRect As Rectangle)" />
      <MemberSignature Language="F#" Value="member this.SendBitmap : System.Drawing.Bitmap * System.Drawing.Rectangle -&gt; unit" Usage="ssd1351.SendBitmap (bm, updateRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bm" Type="System.Drawing.Bitmap" Index="0" FrameworkAlternate="iot-dotnet-1.0;iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
        <Parameter Name="updateRect" Type="System.Drawing.Rectangle" Index="1" FrameworkAlternate="iot-dotnet-1.0;iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
      </Parameters>
      <Docs>
        <param name="bm">The bitmap to be sent to the display controller note that only Pixel Format Format32bppArgb is supported.</param>
        <param name="updateRect">A rectangle that defines where in the display the bitmap is written. Note that no scaling is done.</param>
        <summary>
            Send a bitmap to the ssd1351 display specifying the starting position and destination clipping rectangle.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBitmap">
      <MemberSignature Language="C#" Value="public void SendBitmap (Iot.Device.Graphics.BitmapImage bm, System.Drawing.Point sourcePoint, System.Drawing.Rectangle destinationRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendBitmap(class Iot.Device.Graphics.BitmapImage bm, valuetype System.Drawing.Point sourcePoint, valuetype System.Drawing.Rectangle destinationRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SendBitmap(Iot.Device.Graphics.BitmapImage,System.Drawing.Point,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendBitmap (bm As BitmapImage, sourcePoint As Point, destinationRect As Rectangle)" />
      <MemberSignature Language="F#" Value="member this.SendBitmap : Iot.Device.Graphics.BitmapImage * System.Drawing.Point * System.Drawing.Rectangle -&gt; unit" Usage="ssd1351.SendBitmap (bm, sourcePoint, destinationRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bm" Type="Iot.Device.Graphics.BitmapImage" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="sourcePoint" Type="System.Drawing.Point" Index="1" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="destinationRect" Type="System.Drawing.Rectangle" Index="2" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="bm">The bitmap to be sent to the display controller note that only Pixel Format Format32bppArgb is supported.</param>
        <param name="sourcePoint">A coordinate point in the source bitmap where copying starts from.</param>
        <param name="destinationRect">A rectangle that defines where in the display the bitmap is written. Note that no scaling is done.</param>
        <summary>
            Send a bitmap to the ssd1351 display specifying the starting position and destination clipping rectangle.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBitmap">
      <MemberSignature Language="C#" Value="public void SendBitmap (System.Drawing.Bitmap bm, System.Drawing.Point sourcePoint, System.Drawing.Rectangle destinationRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendBitmap(class System.Drawing.Bitmap bm, valuetype System.Drawing.Point sourcePoint, valuetype System.Drawing.Rectangle destinationRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SendBitmap(System.Drawing.Bitmap,System.Drawing.Point,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendBitmap (bm As Bitmap, sourcePoint As Point, destinationRect As Rectangle)" />
      <MemberSignature Language="F#" Value="member this.SendBitmap : System.Drawing.Bitmap * System.Drawing.Point * System.Drawing.Rectangle -&gt; unit" Usage="ssd1351.SendBitmap (bm, sourcePoint, destinationRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bm" Type="System.Drawing.Bitmap" Index="0" FrameworkAlternate="iot-dotnet-1.0;iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
        <Parameter Name="sourcePoint" Type="System.Drawing.Point" Index="1" FrameworkAlternate="iot-dotnet-1.0;iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
        <Parameter Name="destinationRect" Type="System.Drawing.Rectangle" Index="2" FrameworkAlternate="iot-dotnet-1.0;iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
      </Parameters>
      <Docs>
        <param name="bm">The bitmap to be sent to the display controller note that only Pixel Format Format32bppArgb is supported.</param>
        <param name="sourcePoint">A coordinate point in the source bitmap where copying starts from.</param>
        <param name="destinationRect">A rectangle that defines where in the display the bitmap is written. Note that no scaling is done.</param>
        <summary>
            Send a bitmap to the ssd1351 display specifying the starting position and destination clipping rectangle.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBitmapPixelData">
      <MemberSignature Language="C#" Value="public void SendBitmapPixelData (Span&lt;byte&gt; pixelData, System.Drawing.Rectangle destinationRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendBitmapPixelData(valuetype System.Span`1&lt;unsigned int8&gt; pixelData, valuetype System.Drawing.Rectangle destinationRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SendBitmapPixelData(System.Span{System.Byte},System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendBitmapPixelData (pixelData As Span(Of Byte), destinationRect As Rectangle)" />
      <MemberSignature Language="F#" Value="member this.SendBitmapPixelData : Span&lt;byte&gt; * System.Drawing.Rectangle -&gt; unit" Usage="ssd1351.SendBitmapPixelData (pixelData, destinationRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixelData" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="destinationRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="pixelData">The data to be sent to the display.</param>
        <param name="destinationRect">A rectangle that defines where in the display the data is to be written.</param>
        <summary>
            Send an array of pixel data to the display.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendData">
      <MemberSignature Language="C#" Value="public void SendData (Span&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendData(valuetype System.Span`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SendData(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendData (data As Span(Of Byte))" />
      <MemberSignature Language="F#" Value="member this.SendData : Span&lt;byte&gt; -&gt; unit" Usage="ssd1351.SendData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">The data to send to the display controller.</param>
        <summary>
            Send data to the display controller.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set3rdPreChargePeriod">
      <MemberSignature Language="C#" Value="public void Set3rdPreChargePeriod (byte phase3Period = 8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set3rdPreChargePeriod(unsigned int8 phase3Period) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.Set3rdPreChargePeriod(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set3rdPreChargePeriod (Optional phase3Period As Byte = 8)" />
      <MemberSignature Language="F#" Value="member this.Set3rdPreChargePeriod : byte -&gt; unit" Usage="ssd1351.Set3rdPreChargePeriod phase3Period" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phase3Period" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="phase3Period">Phase 3 period with a range of 1-15. (defaults to 8 DCLKs)</param>
        <summary>
            This double byte command is used to set the phase 3 second pre-charge period.  The period of phase 3 is ranged from 1 to 15 DCLK's.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnAddress">
      <MemberSignature Language="C#" Value="public void SetColumnAddress (byte startColumn = 0, byte endColumn = 127);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnAddress(unsigned int8 startColumn, unsigned int8 endColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetColumnAddress(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnAddress (Optional startColumn As Byte = 0, Optional endColumn As Byte = 127)" />
      <MemberSignature Language="F#" Value="member this.SetColumnAddress : byte * byte -&gt; unit" Usage="ssd1351.SetColumnAddress (startColumn, endColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startColumn" Type="System.Byte" />
        <Parameter Name="endColumn" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="startColumn">Column start address with a range of 0-127. (defaults to 0)</param>
        <param name="endColumn">Column end address with a range of 0-127. (defaults to 127)</param>
        <summary>
            This triple byte command specifies column start address and end address of the display data RAM.
            This command also sets the column address pointer to column start address. This pointer is used
            to define the current read/write column address in graphic display data RAM. If horizontal address
            increment mode is enabled by command 20h, after finishing read/write one column data, it is
            incremented automatically to the next column address. Whenever the column address pointer finishes
            accessing the end column address, it is reset back to start column address and the row address
            is incremented to the next row.  This command is only for horizontal or vertical addressing modes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContrastABC">
      <MemberSignature Language="C#" Value="public void SetContrastABC (byte colorAContrast = 134, byte colorBContrast = 81, byte colorCContrast = 134);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetContrastABC(unsigned int8 colorAContrast, unsigned int8 colorBContrast, unsigned int8 colorCContrast) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetContrastABC(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetContrastABC (Optional colorAContrast As Byte = 134, Optional colorBContrast As Byte = 81, Optional colorCContrast As Byte = 134)" />
      <MemberSignature Language="F#" Value="member this.SetContrastABC : byte * byte * byte -&gt; unit" Usage="ssd1351.SetContrastABC (colorAContrast, colorBContrast, colorCContrast)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorAContrast" Type="System.Byte" />
        <Parameter Name="colorBContrast" Type="System.Byte" />
        <Parameter Name="colorCContrast" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="colorAContrast">Contrast level for color A. (defaults to 0x86)</param>
        <param name="colorBContrast">Contrast level for color B. (defaults to 0x51)</param>
        <param name="colorCContrast">Contrast level for color C. (defaults to 0x86)</param>
        <summary>
            This command is used to set Contrast Setting of the display.
            The chip has 256 contrast steps from 00h to FFh.  The segment
            output current ISEG increases linearly with the contrast step,
            which results in brighter display.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayAllOff">
      <MemberSignature Language="C#" Value="public void SetDisplayAllOff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDisplayAllOff() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetDisplayAllOff" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDisplayAllOff ()" />
      <MemberSignature Language="F#" Value="member this.SetDisplayAllOff : unit -&gt; unit" Usage="ssd1351.SetDisplayAllOff " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This command sets the display to have all pixels at GS0.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayAllOn">
      <MemberSignature Language="C#" Value="public void SetDisplayAllOn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDisplayAllOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetDisplayAllOn" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDisplayAllOn ()" />
      <MemberSignature Language="F#" Value="member this.SetDisplayAllOn : unit -&gt; unit" Usage="ssd1351.SetDisplayAllOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This command sets the display to have all pixels at GS63.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayClockDivideRatioOscillatorFrequency">
      <MemberSignature Language="C#" Value="public void SetDisplayClockDivideRatioOscillatorFrequency (byte displayClockDivideRatio = 1, byte oscillatorFrequency = 13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDisplayClockDivideRatioOscillatorFrequency(unsigned int8 displayClockDivideRatio, unsigned int8 oscillatorFrequency) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetDisplayClockDivideRatioOscillatorFrequency(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDisplayClockDivideRatioOscillatorFrequency (Optional displayClockDivideRatio As Byte = 1, Optional oscillatorFrequency As Byte = 13)" />
      <MemberSignature Language="F#" Value="member this.SetDisplayClockDivideRatioOscillatorFrequency : byte * byte -&gt; unit" Usage="ssd1351.SetDisplayClockDivideRatioOscillatorFrequency (displayClockDivideRatio, oscillatorFrequency)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayClockDivideRatio" Type="System.Byte" />
        <Parameter Name="oscillatorFrequency" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="displayClockDivideRatio">Display clock divide ratio with a range of 0-15. (defaults to 1)</param>
        <param name="oscillatorFrequency">Oscillator frequency with a range of 0-15. (defaults to 13)</param>
        <summary>
            This command sets the divide ratio to generate DCLK (Display Clock) from CLK and
            programs the oscillator frequency Fosc that is the source of CLK if CLS pin is pulled high.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayEnhancement">
      <MemberSignature Language="C#" Value="public void SetDisplayEnhancement (bool enhanceDisplay = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDisplayEnhancement(bool enhanceDisplay) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetDisplayEnhancement(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDisplayEnhancement (Optional enhanceDisplay As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.SetDisplayEnhancement : bool -&gt; unit" Usage="ssd1351.SetDisplayEnhancement enhanceDisplay" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enhanceDisplay" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enhanceDisplay">When set to true turns on enhanced display mode. (defaults to not enhanced)</param>
        <summary>
            This command enhances display performance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayOff">
      <MemberSignature Language="C#" Value="public void SetDisplayOff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDisplayOff() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetDisplayOff" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDisplayOff ()" />
      <MemberSignature Language="F#" Value="member this.SetDisplayOff : unit -&gt; unit" Usage="ssd1351.SetDisplayOff " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This command turns the OLED panel display off.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayOffset">
      <MemberSignature Language="C#" Value="public void SetDisplayOffset (byte displayOffset = 96);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDisplayOffset(unsigned int8 displayOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetDisplayOffset(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDisplayOffset (Optional displayOffset As Byte = 96)" />
      <MemberSignature Language="F#" Value="member this.SetDisplayOffset : byte -&gt; unit" Usage="ssd1351.SetDisplayOffset displayOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayOffset" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="displayOffset">Display offset with a range of 0-127. (defaults to 0x60)</param>
        <summary>
            This command specifies the mapping of the display start line to one of COM0-COM127
            (assuming that COM0 is the display start line then the display start line register is equal to 0).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayOn">
      <MemberSignature Language="C#" Value="public void SetDisplayOn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDisplayOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetDisplayOn" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDisplayOn ()" />
      <MemberSignature Language="F#" Value="member this.SetDisplayOn : unit -&gt; unit" Usage="ssd1351.SetDisplayOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This command turns the OLED panel display on.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayStartLine">
      <MemberSignature Language="C#" Value="public void SetDisplayStartLine (byte displayStartLine = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDisplayStartLine(unsigned int8 displayStartLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetDisplayStartLine(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDisplayStartLine (Optional displayStartLine As Byte = 0)" />
      <MemberSignature Language="F#" Value="member this.SetDisplayStartLine : byte -&gt; unit" Usage="ssd1351.SetDisplayStartLine displayStartLine" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayStartLine" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="displayStartLine">Display start line with a range of 0-127. (defaults to 0)</param>
        <summary>
            This command sets the Display Start Line register to determine starting address of display RAM,
            by selecting a value from 0 to 127. With value equal to 0, RAM row 0 is mapped to COM0.
            With value equal to 1, RAM row 1 is mapped to COM0 and so on.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGpio">
      <MemberSignature Language="C#" Value="public void SetGpio (Iot.Device.Ssd1351.GpioMode pin0Mode = Iot.Device.Ssd1351.GpioMode.OutputLow, Iot.Device.Ssd1351.GpioMode pin1Mode = Iot.Device.Ssd1351.GpioMode.OutputLow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGpio(valuetype Iot.Device.Ssd1351.GpioMode pin0Mode, valuetype Iot.Device.Ssd1351.GpioMode pin1Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetGpio(Iot.Device.Ssd1351.GpioMode,Iot.Device.Ssd1351.GpioMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGpio (Optional pin0Mode As GpioMode = Iot.Device.Ssd1351.GpioMode.OutputLow, Optional pin1Mode As GpioMode = Iot.Device.Ssd1351.GpioMode.OutputLow)" />
      <MemberSignature Language="F#" Value="member this.SetGpio : Iot.Device.Ssd1351.GpioMode * Iot.Device.Ssd1351.GpioMode -&gt; unit" Usage="ssd1351.SetGpio (pin0Mode, pin1Mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pin0Mode" Type="Iot.Device.Ssd1351.GpioMode" />
        <Parameter Name="pin1Mode" Type="Iot.Device.Ssd1351.GpioMode" />
      </Parameters>
      <Docs>
        <param name="pin0Mode">The GpioMode of Pin0. (defaults to Output/Low)</param>
        <param name="pin1Mode">The GpioMode of Pin1. (defaults to Output/Low)</param>
        <summary>
            This double byte command is used to set the states of GPIO0 and GPIO1 pins
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGrayLevels">
      <MemberSignature Language="C#" Value="public void SetGrayLevels (byte[] grayLevels = default);" FrameworkAlternate="iot-dotnet-1.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGrayLevels(unsigned int8[] grayLevels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetGrayLevels(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGrayLevels (Optional grayLevels As Byte() = Nothing)" />
      <MemberSignature Language="F#" Value="member this.SetGrayLevels : byte[] -&gt; unit" Usage="ssd1351.SetGrayLevels grayLevels" />
      <MemberSignature Language="C#" Value="public void SetGrayLevels (byte[]? grayLevels = default);" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grayLevels" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="grayLevels">A byte array containing 64 gray levels representing GS0 -&gt; GS63.
            If this parameter is null or an empty array then the gray leves are set to default.</param>
        <summary>
            This command sets the gray levels GS0 -&gt; GS63.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHorizontalScroll">
      <MemberSignature Language="C#" Value="public void SetHorizontalScroll (Iot.Device.Ssd1351.ScrollDirection scrollDirection, byte startRow, byte numberOfRows, Iot.Device.Ssd1351.ScrollSpeed scrollSpeed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHorizontalScroll(valuetype Iot.Device.Ssd1351.ScrollDirection scrollDirection, unsigned int8 startRow, unsigned int8 numberOfRows, valuetype Iot.Device.Ssd1351.ScrollSpeed scrollSpeed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetHorizontalScroll(Iot.Device.Ssd1351.ScrollDirection,System.Byte,System.Byte,Iot.Device.Ssd1351.ScrollSpeed)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHorizontalScroll (scrollDirection As ScrollDirection, startRow As Byte, numberOfRows As Byte, scrollSpeed As ScrollSpeed)" />
      <MemberSignature Language="F#" Value="member this.SetHorizontalScroll : Iot.Device.Ssd1351.ScrollDirection * byte * byte * Iot.Device.Ssd1351.ScrollSpeed -&gt; unit" Usage="ssd1351.SetHorizontalScroll (scrollDirection, startRow, numberOfRows, scrollSpeed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollDirection" Type="Iot.Device.Ssd1351.ScrollDirection" />
        <Parameter Name="startRow" Type="System.Byte" />
        <Parameter Name="numberOfRows" Type="System.Byte" />
        <Parameter Name="scrollSpeed" Type="Iot.Device.Ssd1351.ScrollSpeed" />
      </Parameters>
      <Docs>
        <param name="scrollDirection">The direction for the horizontal scrolling to scroll</param>
        <param name="startRow">The first row to be scrolled</param>
        <param name="numberOfRows">The number od rows to be scrolled</param>
        <param name="scrollSpeed">The speed of the horizontal scroll</param>
        <summary>
            Set Horizontal Scroll
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInverseDisplay">
      <MemberSignature Language="C#" Value="public void SetInverseDisplay ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInverseDisplay() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetInverseDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInverseDisplay ()" />
      <MemberSignature Language="F#" Value="member this.SetInverseDisplay : unit -&gt; unit" Usage="ssd1351.SetInverseDisplay " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This command sets the display to be inverse.
            The gray level of display data are swapped such that “GS0” ↔ “GS63”, “GS1” ↔ “GS62”
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMasterContrast">
      <MemberSignature Language="C#" Value="public void SetMasterContrast (byte masterContrast = 15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMasterContrast(unsigned int8 masterContrast) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetMasterContrast(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMasterContrast (Optional masterContrast As Byte = 15)" />
      <MemberSignature Language="F#" Value="member this.SetMasterContrast : byte -&gt; unit" Usage="ssd1351.SetMasterContrast masterContrast" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterContrast" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="masterContrast">Master Contrast 0 -&gt; 15.(defaults to 15)</param>
        <summary>
            This double byte command is to control the segment output current by a scaling factor.
            The chip has 16 master control steps, with the factor ranges from 1 [0000b] to 16
            [1111b – default]. The smaller the master current value, the dimmer the OLED panel
            display is set.   For example, if original segment output current is 160uA at
            scale factor = 16, setting scale factor to 8 would reduce the current to 80uA
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMultiplexRatio">
      <MemberSignature Language="C#" Value="public void SetMultiplexRatio (byte multiplexRatio = 127);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMultiplexRatio(unsigned int8 multiplexRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetMultiplexRatio(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMultiplexRatio (Optional multiplexRatio As Byte = 127)" />
      <MemberSignature Language="F#" Value="member this.SetMultiplexRatio : byte -&gt; unit" Usage="ssd1351.SetMultiplexRatio multiplexRatio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiplexRatio" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="multiplexRatio">Multiplex ratio with a range of 15-127. (defaults to 127)</param>
        <summary>
            This command switches the default 63 multiplex mode to any multiplex ratio, ranging from 15 to 127.
            The output pads COM0-COM127 will be switched to the corresponding COM signal.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNormalDisplay">
      <MemberSignature Language="C#" Value="public void SetNormalDisplay ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNormalDisplay() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetNormalDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNormalDisplay ()" />
      <MemberSignature Language="F#" Value="member this.SetNormalDisplay : unit -&gt; unit" Usage="ssd1351.SetNormalDisplay " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This command sets the display to be normal where the display reflects the contents of the RAM..
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreChargePeriods">
      <MemberSignature Language="C#" Value="public void SetPreChargePeriods (byte phase1Period = 2, byte phase2Period = 8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPreChargePeriods(unsigned int8 phase1Period, unsigned int8 phase2Period) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetPreChargePeriods(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPreChargePeriods (Optional phase1Period As Byte = 2, Optional phase2Period As Byte = 8)" />
      <MemberSignature Language="F#" Value="member this.SetPreChargePeriods : byte * byte -&gt; unit" Usage="ssd1351.SetPreChargePeriods (phase1Period, phase2Period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phase1Period" Type="System.Byte" />
        <Parameter Name="phase2Period" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="phase1Period">Phase 1 period with a range of 2-15. (defaults to 2 x 2 DCLKs)</param>
        <param name="phase2Period">Phase 2 period with a range of 3-15. (defaults to 8 DCLKs)</param>
        <summary>
            This double byte command sets the length of phase 1 and 2 of segment waveform of the driver.
            Phase 1: Set the period from 5 to 31 in the unit of 2 DCLKs.  A larger capacitance of the
            OLED pixel may require longer period to discharge the previous data charge completely.
            Phase 2 (A[7:4]): Set the period from 3 to 15 in the unit of DCLKs.  A longer period
            is needed to charge up a larger capacitance of the OLED pixel to the target voltage.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreChargeVoltageLevel">
      <MemberSignature Language="C#" Value="public void SetPreChargeVoltageLevel (byte prechargeLevel = 23);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPreChargeVoltageLevel(unsigned int8 prechargeLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetPreChargeVoltageLevel(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPreChargeVoltageLevel (Optional prechargeLevel As Byte = 23)" />
      <MemberSignature Language="F#" Value="member this.SetPreChargeVoltageLevel : byte -&gt; unit" Usage="ssd1351.SetPreChargeVoltageLevel prechargeLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prechargeLevel" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="prechargeLevel">Pre-charge voltage level with a range of 0-31 that represents 0.20 x Vcc -&gt; 0.60 x Vcc. (defaults to 0.38 x Vcc)</param>
        <summary>
            This double byte command is used to set the pre-charge voltage level. The precharge
            voltage level ranges from 0.20 x Vcc -&gt; 0.60 x Vcc.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowAddress">
      <MemberSignature Language="C#" Value="public void SetRowAddress (byte startRow = 0, byte endRow = 127);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRowAddress(unsigned int8 startRow, unsigned int8 endRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetRowAddress(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRowAddress (Optional startRow As Byte = 0, Optional endRow As Byte = 127)" />
      <MemberSignature Language="F#" Value="member this.SetRowAddress : byte * byte -&gt; unit" Usage="ssd1351.SetRowAddress (startRow, endRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRow" Type="System.Byte" />
        <Parameter Name="endRow" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="startRow">Row start address with a range of 0-127. (defaults to 0)</param>
        <param name="endRow">Row end address with a range of 0-127. (defaults to 127)</param>
        <summary>
            This triple byte command specifies row start address and end address of the display
            data RAM.This command also sets the row address pointer to row start address.This
            pointer is used to define the current read/write row address in graphic display data
            RAM. If vertical address increment mode is enabled by command A0h, after finishing
            read/write one row data, it is incremented automatically to the next row address.
            Whenever the row address pointer finishes accessing the end row address, it is
            reset back to start row address.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSegmentReMapColorDepth">
      <MemberSignature Language="C#" Value="public void SetSegmentReMapColorDepth (Iot.Device.Ssd1351.ColorDepth colorDepth = Iot.Device.Ssd1351.ColorDepth.ColourDepth65K, Iot.Device.Ssd1351.CommonSplit commonSplit = Iot.Device.Ssd1351.CommonSplit.OddEven, Iot.Device.Ssd1351.Seg0Common seg0Common = Iot.Device.Ssd1351.Seg0Common.Column0, Iot.Device.Ssd1351.ColorSequence colorSequence = Iot.Device.Ssd1351.ColorSequence.BGR);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSegmentReMapColorDepth(valuetype Iot.Device.Ssd1351.ColorDepth colorDepth, valuetype Iot.Device.Ssd1351.CommonSplit commonSplit, valuetype Iot.Device.Ssd1351.Seg0Common seg0Common, valuetype Iot.Device.Ssd1351.ColorSequence colorSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetSegmentReMapColorDepth(Iot.Device.Ssd1351.ColorDepth,Iot.Device.Ssd1351.CommonSplit,Iot.Device.Ssd1351.Seg0Common,Iot.Device.Ssd1351.ColorSequence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSegmentReMapColorDepth (Optional colorDepth As ColorDepth = Iot.Device.Ssd1351.ColorDepth.ColourDepth65K, Optional commonSplit As CommonSplit = Iot.Device.Ssd1351.CommonSplit.OddEven, Optional seg0Common As Seg0Common = Iot.Device.Ssd1351.Seg0Common.Column0, Optional colorSequence As ColorSequence = Iot.Device.Ssd1351.ColorSequence.BGR)" />
      <MemberSignature Language="F#" Value="member this.SetSegmentReMapColorDepth : Iot.Device.Ssd1351.ColorDepth * Iot.Device.Ssd1351.CommonSplit * Iot.Device.Ssd1351.Seg0Common * Iot.Device.Ssd1351.ColorSequence -&gt; unit" Usage="ssd1351.SetSegmentReMapColorDepth (colorDepth, commonSplit, seg0Common, colorSequence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorDepth" Type="Iot.Device.Ssd1351.ColorDepth" />
        <Parameter Name="commonSplit" Type="Iot.Device.Ssd1351.CommonSplit" />
        <Parameter Name="seg0Common" Type="Iot.Device.Ssd1351.Seg0Common" />
        <Parameter Name="colorSequence" Type="Iot.Device.Ssd1351.ColorSequence" />
      </Parameters>
      <Docs>
        <param name="colorDepth">Number of colors displayed. (defaults to 0x65K)</param>
        <param name="commonSplit">Defines if to split commons odd then even columns. (defaults to odd/even)</param>
        <param name="seg0Common">Column address 0 is mapped to SEG0 when set to Column0. Column address 127 is mapped to SEG0 when set to Column127. (defaults to Segment0 = Column0)</param>
        <param name="colorSequence">Colors are ordered R-&gt;G-&gt;B when set to RGB. Colors are ordered B-&gt;G-&gt;A when set to BGR. (defaults to BGR)</param>
        <summary>
            This command changes the mapping between the display data column address and the segment driver.
            It allows flexibility in OLED module design. This command only affects subsequent data input.
            Data already stored in GDDRAM will have no changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVcomhDeselectLevel">
      <MemberSignature Language="C#" Value="public void SetVcomhDeselectLevel (Iot.Device.Ssd1351.VComHDeselectLevel level = Iot.Device.Ssd1351.VComHDeselectLevel.VccX082);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVcomhDeselectLevel(valuetype Iot.Device.Ssd1351.VComHDeselectLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetVcomhDeselectLevel(Iot.Device.Ssd1351.VComHDeselectLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVcomhDeselectLevel (Optional level As VComHDeselectLevel = Iot.Device.Ssd1351.VComHDeselectLevel.VccX082)" />
      <MemberSignature Language="F#" Value="member this.SetVcomhDeselectLevel : Iot.Device.Ssd1351.VComHDeselectLevel -&gt; unit" Usage="ssd1351.SetVcomhDeselectLevel level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Iot.Device.Ssd1351.VComHDeselectLevel" />
      </Parameters>
      <Docs>
        <param name="level">Vcomh deselect level. (defaults to 0.82 x Vcc)</param>
        <summary>
            This double byte command sets the high voltage level of common pins, VCOMH.
            The level of VCOMH is programmed with reference to VC.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVDDSource">
      <MemberSignature Language="C#" Value="public void SetVDDSource (Iot.Device.Ssd1351.VDDSource vddSource = Iot.Device.Ssd1351.VDDSource.Internal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVDDSource(valuetype Iot.Device.Ssd1351.VDDSource vddSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetVDDSource(Iot.Device.Ssd1351.VDDSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVDDSource (Optional vddSource As VDDSource = Iot.Device.Ssd1351.VDDSource.Internal)" />
      <MemberSignature Language="F#" Value="member this.SetVDDSource : Iot.Device.Ssd1351.VDDSource -&gt; unit" Usage="ssd1351.SetVDDSource vddSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vddSource" Type="Iot.Device.Ssd1351.VDDSource" />
      </Parameters>
      <Docs>
        <param name="vddSource">The source of VDD. (defaults to Internal)</param>
        <summary>
            This double byte command is used to enable or disable the VDD regulator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVSL">
      <MemberSignature Language="C#" Value="public void SetVSL (byte vslValue0 = 160, byte vslValue1 = 181, byte vslValue2 = 85);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVSL(unsigned int8 vslValue0, unsigned int8 vslValue1, unsigned int8 vslValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.SetVSL(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVSL (Optional vslValue0 As Byte = 160, Optional vslValue1 As Byte = 181, Optional vslValue2 As Byte = 85)" />
      <MemberSignature Language="F#" Value="member this.SetVSL : byte * byte * byte -&gt; unit" Usage="ssd1351.SetVSL (vslValue0, vslValue1, vslValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vslValue0" Type="System.Byte" />
        <Parameter Name="vslValue1" Type="System.Byte" />
        <Parameter Name="vslValue2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="vslValue0">VSL Value 0. (defaults to 0xA0)</param>
        <param name="vslValue1">VSL Value 1. (defaults to 0xB5)</param>
        <param name="vslValue2">VSL Value 2. (defaults to 0x55)</param>
        <summary>
            Set the segment voltage reference values. Note that for the Adafruit board then use the defaults
            (in fact not sure if you can use anything but the defaults accoring to the datasheet)
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartScrolling">
      <MemberSignature Language="C#" Value="public void StartScrolling ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartScrolling() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.StartScrolling" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartScrolling ()" />
      <MemberSignature Language="F#" Value="member this.StartScrolling : unit -&gt; unit" Usage="ssd1351.StartScrolling " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Start horizontal scrolling
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopScrolling">
      <MemberSignature Language="C#" Value="public void StopScrolling ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopScrolling() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.StopScrolling" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopScrolling ()" />
      <MemberSignature Language="F#" Value="member this.StopScrolling : unit -&gt; unit" Usage="ssd1351.StopScrolling " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stop horizontal scrolling
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public void Unlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Ssd1351.Ssd1351.Unlock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock ()" />
      <MemberSignature Language="F#" Value="member this.Unlock : unit -&gt; unit" Usage="ssd1351.Unlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This command allows the driver IC to resume from the “Lock” state. And the driver IC will then respond to the command and memory access.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
