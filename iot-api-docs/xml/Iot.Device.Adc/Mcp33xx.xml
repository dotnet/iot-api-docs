<Type Name="Mcp33xx" FullName="Iot.Device.Adc.Mcp33xx">
  <TypeSignature Language="C#" Value="public abstract class Mcp33xx : Iot.Device.Adc.Mcp3xxx" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Mcp33xx extends Iot.Device.Adc.Mcp3xxx" />
  <TypeSignature Language="DocId" Value="T:Iot.Device.Adc.Mcp33xx" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Mcp33xx&#xA;Inherits Mcp3xxx" />
  <TypeSignature Language="F#" Value="type Mcp33xx = class&#xA;    inherit Mcp3xxx" />
  <AssemblyInfo>
    <AssemblyName>Iot.Device.Bindings</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Iot.Device.Adc.Mcp3xxx</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            MCP33XX family of Analog to Digital Converters
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Mcp33xx (System.Device.Spi.SpiDevice spiDevice, byte channelCount, byte adcResolutionBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Device.Spi.SpiDevice spiDevice, unsigned int8 channelCount, unsigned int8 adcResolutionBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Adc.Mcp33xx.#ctor(System.Device.Spi.SpiDevice,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (spiDevice As SpiDevice, channelCount As Byte, adcResolutionBits As Byte)" />
      <MemberSignature Language="F#" Value="new Iot.Device.Adc.Mcp33xx : System.Device.Spi.SpiDevice * byte * byte -&gt; Iot.Device.Adc.Mcp33xx" Usage="new Iot.Device.Adc.Mcp33xx (spiDevice, channelCount, adcResolutionBits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="spiDevice" Type="System.Device.Spi.SpiDevice" />
        <Parameter Name="channelCount" Type="System.Byte" />
        <Parameter Name="adcResolutionBits" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="spiDevice">Device used for SPI communication</param>
        <param name="channelCount">Value representing the number of single ended input channels on the device.</param>
        <param name="adcResolutionBits">The number of bits of resolution for the ADC.</param>
        <summary>
            Constructs Mcp33xx instance
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDifferential">
      <MemberSignature Language="C#" Value="public override int ReadDifferential (int valueChannel, int referenceChannel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadDifferential(int32 valueChannel, int32 referenceChannel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Adc.Mcp33xx.ReadDifferential(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadDifferential (valueChannel As Integer, referenceChannel As Integer) As Integer" />
      <MemberSignature Language="F#" Value="override this.ReadDifferential : int * int -&gt; int" Usage="mcp33xx.ReadDifferential (valueChannel, referenceChannel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueChannel" Type="System.Int32" />
        <Parameter Name="referenceChannel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueChannel">Channel which represents the signal driving the value in a positive direction (valid values: 0 to channelcount - 1).</param>
        <param name="referenceChannel">Channel which represents the signal driving the value in a negative direction (valid values: 0 to channelcount - 1).</param>
        <summary>
            Reads a 13 bit signed value from the device using differential inputs
            </summary>
        <returns>A 13 bit signed value corresponding to relative voltage level on specified device channels</returns>
        <remarks>
            The value that is read respresents the difference between the voltage on the value channel and the voltage on the reference channel (valueChannel Reading - referenceChannel Reading).
            If the valueChannel and the referenceChannel are part of the same channel pairing then the ADC converter will internally subtract the two values. If not then the subtraction is
            performed in software which may mean that errors are introduced with rapidly changing signals.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPseudoDifferential">
      <MemberSignature Language="C#" Value="public override int ReadPseudoDifferential (int valueChannel, int referenceChannel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadPseudoDifferential(int32 valueChannel, int32 referenceChannel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Adc.Mcp33xx.ReadPseudoDifferential(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadPseudoDifferential (valueChannel As Integer, referenceChannel As Integer) As Integer" />
      <MemberSignature Language="F#" Value="override this.ReadPseudoDifferential : int * int -&gt; int" Usage="mcp33xx.ReadPseudoDifferential (valueChannel, referenceChannel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueChannel" Type="System.Int32" />
        <Parameter Name="referenceChannel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueChannel">Channel which represents the signal (valid values: 0 to channelcount - 1).</param>
        <param name="referenceChannel">Channel which represents the signal ground (valid values: 0 to channelcount - 1).</param>
        <summary>
            Reads a  value from the device using pseudo-differential inputs
            </summary>
        <returns>A value corresponding to relative voltage level on specified device channels</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignExtend">
      <MemberSignature Language="C#" Value="public static int SignExtend (int signedValue, int signingBit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SignExtend(int32 signedValue, int32 signingBit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Adc.Mcp33xx.SignExtend(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignExtend (signedValue As Integer, signingBit As Integer) As Integer" />
      <MemberSignature Language="F#" Value="static member SignExtend : int * int -&gt; int" Usage="Iot.Device.Adc.Mcp33xx.SignExtend (signedValue, signingBit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedValue" Type="System.Int32" />
        <Parameter Name="signingBit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signedValue">Signed value with a sign bit at a particular location</param>
        <param name="signingBit">Bit number that contains the sign bit</param>
        <summary>
            Convert a signed value with a sign bit at a particular location to an int.
            </summary>
        <returns>A value corresponding to the signed value sign extended into an int</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
