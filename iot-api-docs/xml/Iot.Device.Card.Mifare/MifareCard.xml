<Type Name="MifareCard" FullName="Iot.Device.Card.Mifare.MifareCard">
  <TypeSignature Language="C#" Value="public class MifareCard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MifareCard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Iot.Device.Card.Mifare.MifareCard" />
  <TypeSignature Language="VB.NET" Value="Public Class MifareCard" />
  <TypeSignature Language="F#" Value="type MifareCard = class" />
  <AssemblyInfo>
    <AssemblyName>Iot.Device.Bindings</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Mifare card class
            Supports Mifare Classic 1K and 4K
            Also supports Mifare Plus 2K and 4K operating in SL1
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MifareCard (Iot.Device.Card.CardTransceiver rfid, byte target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Iot.Device.Card.CardTransceiver rfid, unsigned int8 target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.#ctor(Iot.Device.Card.CardTransceiver,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rfid As CardTransceiver, target As Byte)" />
      <MemberSignature Language="F#" Value="new Iot.Device.Card.Mifare.MifareCard : Iot.Device.Card.CardTransceiver * byte -&gt; Iot.Device.Card.Mifare.MifareCard" Usage="new Iot.Device.Card.Mifare.MifareCard (rfid, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rfid" Type="Iot.Device.Card.CardTransceiver" />
        <Parameter Name="target" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="rfid">A card transceiver class</param>
        <param name="target">The target number as some card readers attribute one</param>
        <summary>
            Constructor for Mifarecard
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockAccess">
      <MemberSignature Language="C#" Value="public Iot.Device.Card.Mifare.AccessType BlockAccess (byte blockNumber, byte[] sectorData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Iot.Device.Card.Mifare.AccessType BlockAccess(unsigned int8 blockNumber, unsigned int8[] sectorData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.BlockAccess(System.Byte,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BlockAccess (blockNumber As Byte, sectorData As Byte()) As AccessType" />
      <MemberSignature Language="F#" Value="member this.BlockAccess : byte * byte[] -&gt; Iot.Device.Card.Mifare.AccessType" Usage="mifareCard.BlockAccess (blockNumber, sectorData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Card.Mifare.AccessType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockNumber" Type="System.Byte" />
        <Parameter Name="sectorData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="blockNumber">the block number</param>
        <param name="sectorData">the sector tailer data</param>
        <summary>
            Get the block access information
            </summary>
        <returns>The access type rights</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockNumber">
      <MemberSignature Language="C#" Value="public byte BlockNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 BlockNumber" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.BlockNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property BlockNumber As Byte" />
      <MemberSignature Language="F#" Value="member this.BlockNumber : byte with get, set" Usage="Iot.Device.Card.Mifare.MifareCard.BlockNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The block number to authenticate or read or write
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockNumberToBlockGroup">
      <MemberSignature Language="C#" Value="public static byte BlockNumberToBlockGroup (byte blockNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 BlockNumberToBlockGroup(unsigned int8 blockNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.BlockNumberToBlockGroup(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlockNumberToBlockGroup (blockNumber As Byte) As Byte" />
      <MemberSignature Language="F#" Value="static member BlockNumberToBlockGroup : byte -&gt; byte" Usage="Iot.Device.Card.Mifare.MifareCard.BlockNumberToBlockGroup blockNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockNumber" Type="System.Byte" Index="0" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="blockNumber">block number</param>
        <summary>
            Determine the block group corresponding to a block number
            </summary>
        <returns>block group</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockNumberToSector">
      <MemberSignature Language="C#" Value="public static byte BlockNumberToSector (byte blockNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 BlockNumberToSector(unsigned int8 blockNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.BlockNumberToSector(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlockNumberToSector (blockNumber As Byte) As Byte" />
      <MemberSignature Language="F#" Value="static member BlockNumberToSector : byte -&gt; byte" Usage="Iot.Device.Card.Mifare.MifareCard.BlockNumberToSector blockNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockNumber" Type="System.Byte" Index="0" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="blockNumber">block number</param>
        <summary>
            Determine the sector number corresponding to a particular block number
            </summary>
        <returns>sector number</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public Iot.Device.Card.Mifare.MifareCardCapacity Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Iot.Device.Card.Mifare.MifareCardCapacity Capacity" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As MifareCardCapacity" />
      <MemberSignature Language="F#" Value="member this.Capacity : Iot.Device.Card.Mifare.MifareCardCapacity with get, set" Usage="Iot.Device.Card.Mifare.MifareCard.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Card.Mifare.MifareCardCapacity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The storage capacity
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public Iot.Device.Card.Mifare.MifareCardCommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Iot.Device.Card.Mifare.MifareCardCommand Command" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As MifareCardCommand" />
      <MemberSignature Language="F#" Value="member this.Command : Iot.Device.Card.Mifare.MifareCardCommand with get, set" Usage="Iot.Device.Card.Mifare.MifareCard.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Card.Mifare.MifareCardCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The command to execute on the card
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[]? Data { get; set; }" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="Iot.Device.Card.Mifare.MifareCard.Data" />
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" FrameworkAlternate="iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Data which has been read or to write for the specific block
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBlocksNdefKeyA">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;byte&gt; DefaultBlocksNdefKeyA { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; DefaultBlocksNdefKeyA" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.DefaultBlocksNdefKeyA" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultBlocksNdefKeyA As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="F#" Value="static member DefaultBlocksNdefKeyA : ReadOnlySpan&lt;byte&gt;" Usage="Iot.Device.Card.Mifare.MifareCard.DefaultBlocksNdefKeyA" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Default block Key A for NDEF card
            </summary>
        <value>To be added.</value>
        <remarks>See https://www.nxp.com/docs/en/application-note/AN10787.pdf for more information</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFirstBlockNdefKeyA">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;byte&gt; DefaultFirstBlockNdefKeyA { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; DefaultFirstBlockNdefKeyA" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.DefaultFirstBlockNdefKeyA" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultFirstBlockNdefKeyA As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="F#" Value="static member DefaultFirstBlockNdefKeyA : ReadOnlySpan&lt;byte&gt;" Usage="Iot.Device.Card.Mifare.MifareCard.DefaultFirstBlockNdefKeyA" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Default Mifare Application Directory block Key A for NDEF card
            The MAD is in the first sector on all cards and also sector 16 on 2K and 4K cards
            </summary>
        <value>To be added.</value>
        <remarks>See https://www.nxp.com/docs/en/application-note/AN10787.pdf for more information</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultKeyA">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;byte&gt; DefaultKeyA { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; DefaultKeyA" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.DefaultKeyA" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultKeyA As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="F#" Value="static member DefaultKeyA : ReadOnlySpan&lt;byte&gt;" Usage="Iot.Device.Card.Mifare.MifareCard.DefaultKeyA" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Default Key A
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultKeyB">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;byte&gt; DefaultKeyB { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; DefaultKeyB" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.DefaultKeyB" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultKeyB As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="F#" Value="static member DefaultKeyB : ReadOnlySpan&lt;byte&gt;" Usage="Iot.Device.Card.Mifare.MifareCard.DefaultKeyB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Default Key B
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeDefaultSectorAndBlockTailer">
      <MemberSignature Language="C#" Value="public (byte b6, byte b7, byte b8) EncodeDefaultSectorAndBlockTailer ();" FrameworkAlternate="iot-dotnet-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ValueTuple`3&lt;unsigned int8, unsigned int8, unsigned int8&gt; EncodeDefaultSectorAndBlockTailer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.EncodeDefaultSectorAndBlockTailer" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeDefaultSectorAndBlockTailer () As ValueTuple(Of Byte, Byte, Byte)" />
      <MemberSignature Language="F#" Value="member this.EncodeDefaultSectorAndBlockTailer : unit -&gt; ValueTuple&lt;byte, byte, byte&gt;" Usage="mifareCard.EncodeDefaultSectorAndBlockTailer " />
      <MemberSignature Language="C#" Value="public (byte B6, byte B7, byte B8) EncodeDefaultSectorAndBlockTailer ();" FrameworkAlternate="iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Byte,System.Byte,System.Byte&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="iot-dotnet-1.1">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "b6", "b7", "b8" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "b6", "b7", "b8" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Encode with default value the access sector and tailer blocks
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeSectorAndBlockTailer">
      <MemberSignature Language="C#" Value="public (byte B6, byte B7, byte B8) EncodeSectorAndBlockTailer (Iot.Device.Card.Mifare.AccessSector accessSector, Iot.Device.Card.Mifare.AccessType[] accessTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ValueTuple`3&lt;unsigned int8, unsigned int8, unsigned int8&gt; EncodeSectorAndBlockTailer(valuetype Iot.Device.Card.Mifare.AccessSector accessSector, valuetype Iot.Device.Card.Mifare.AccessType[] accessTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.EncodeSectorAndBlockTailer(Iot.Device.Card.Mifare.AccessSector,Iot.Device.Card.Mifare.AccessType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeSectorAndBlockTailer (accessSector As AccessSector, accessTypes As AccessType()) As ValueTuple(Of Byte, Byte, Byte)" />
      <MemberSignature Language="F#" Value="member this.EncodeSectorAndBlockTailer : Iot.Device.Card.Mifare.AccessSector * Iot.Device.Card.Mifare.AccessType[] -&gt; ValueTuple&lt;byte, byte, byte&gt;" Usage="mifareCard.EncodeSectorAndBlockTailer (accessSector, accessTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Byte,System.Byte,System.Byte&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "B6", "B7", "B8" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "B6", "B7", "B8" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessSector" Type="Iot.Device.Card.Mifare.AccessSector" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="accessTypes" Type="Iot.Device.Card.Mifare.AccessType[]" Index="1" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="accessSector">The access desired</param>
        <param name="accessTypes">An array of 3 AccessType determining access of each block</param>
        <summary>
            Encode the desired access for the full sector including the block tailer
            </summary>
        <returns>The 3 bytes encoding the rights</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeSectorAndClockTailer">
      <MemberSignature Language="C#" Value="public (byte b6, byte b7, byte b8) EncodeSectorAndClockTailer (Iot.Device.Card.Mifare.AccessSector accessSector, Iot.Device.Card.Mifare.AccessType[] accessTypes);" FrameworkAlternate="iot-dotnet-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ValueTuple`3&lt;unsigned int8, unsigned int8, unsigned int8&gt; EncodeSectorAndClockTailer(valuetype Iot.Device.Card.Mifare.AccessSector accessSector, valuetype Iot.Device.Card.Mifare.AccessType[] accessTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.EncodeSectorAndClockTailer(Iot.Device.Card.Mifare.AccessSector,Iot.Device.Card.Mifare.AccessType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeSectorAndClockTailer (accessSector As AccessSector, accessTypes As AccessType()) As ValueTuple(Of Byte, Byte, Byte)" />
      <MemberSignature Language="F#" Value="member this.EncodeSectorAndClockTailer : Iot.Device.Card.Mifare.AccessSector * Iot.Device.Card.Mifare.AccessType[] -&gt; ValueTuple&lt;byte, byte, byte&gt;" Usage="mifareCard.EncodeSectorAndClockTailer (accessSector, accessTypes)" />
      <MemberSignature Language="C#" Value="public (byte B6, byte B7, byte B8) EncodeSectorAndClockTailer (Iot.Device.Card.Mifare.AccessSector accessSector, Iot.Device.Card.Mifare.AccessType[] accessTypes);" FrameworkAlternate="iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="iot-dotnet-latest">
          <AttributeName Language="C#">[System.Obsolete("deprecated, use EncodeSectorAndBlockTailer instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated, use EncodeSectorAndBlockTailer instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Byte,System.Byte,System.Byte&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="iot-dotnet-1.1">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "b6", "b7", "b8" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "b6", "b7", "b8" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessSector" Type="Iot.Device.Card.Mifare.AccessSector" />
        <Parameter Name="accessTypes" Type="Iot.Device.Card.Mifare.AccessType[]" />
      </Parameters>
      <Docs>
        <param name="accessSector">The access desired</param>
        <param name="accessTypes">An array of 3 AccessType determining access of each block</param>
        <summary>
            Encode the desired access for the full sector including the block tailer
            </summary>
        <returns>The 3 bytes encoding the rights</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeSectorTailer">
      <MemberSignature Language="C#" Value="public (byte b6, byte b7, byte b8) EncodeSectorTailer (Iot.Device.Card.Mifare.AccessSector accessSector);" FrameworkAlternate="iot-dotnet-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ValueTuple`3&lt;unsigned int8, unsigned int8, unsigned int8&gt; EncodeSectorTailer(valuetype Iot.Device.Card.Mifare.AccessSector accessSector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.EncodeSectorTailer(Iot.Device.Card.Mifare.AccessSector)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeSectorTailer (accessSector As AccessSector) As ValueTuple(Of Byte, Byte, Byte)" />
      <MemberSignature Language="F#" Value="member this.EncodeSectorTailer : Iot.Device.Card.Mifare.AccessSector -&gt; ValueTuple&lt;byte, byte, byte&gt;" Usage="mifareCard.EncodeSectorTailer accessSector" />
      <MemberSignature Language="C#" Value="public (byte B6, byte B7, byte B8) EncodeSectorTailer (Iot.Device.Card.Mifare.AccessSector accessSector);" FrameworkAlternate="iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Byte,System.Byte,System.Byte&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="iot-dotnet-1.1">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "b6", "b7", "b8" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "b6", "b7", "b8" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessSector" Type="Iot.Device.Card.Mifare.AccessSector" />
      </Parameters>
      <Docs>
        <param name="accessSector">the access sector</param>
        <summary>
            Get the sector tailer bytes for a specific access sector configuration
            </summary>
        <returns>the 3 bytes for configuration</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeSectorTailer">
      <MemberSignature Language="C#" Value="public (byte b6, byte b7, byte b8) EncodeSectorTailer (byte blockNumber, Iot.Device.Card.Mifare.AccessType accessType);" FrameworkAlternate="iot-dotnet-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ValueTuple`3&lt;unsigned int8, unsigned int8, unsigned int8&gt; EncodeSectorTailer(unsigned int8 blockNumber, valuetype Iot.Device.Card.Mifare.AccessType accessType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.EncodeSectorTailer(System.Byte,Iot.Device.Card.Mifare.AccessType)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeSectorTailer (blockNumber As Byte, accessType As AccessType) As ValueTuple(Of Byte, Byte, Byte)" />
      <MemberSignature Language="F#" Value="member this.EncodeSectorTailer : byte * Iot.Device.Card.Mifare.AccessType -&gt; ValueTuple&lt;byte, byte, byte&gt;" Usage="mifareCard.EncodeSectorTailer (blockNumber, accessType)" />
      <MemberSignature Language="C#" Value="public (byte B6, byte B7, byte B8) EncodeSectorTailer (byte blockNumber, Iot.Device.Card.Mifare.AccessType accessType);" FrameworkAlternate="iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Byte,System.Byte,System.Byte&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="iot-dotnet-1.1">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "b6", "b7", "b8" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "b6", "b7", "b8" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockNumber" Type="System.Byte" />
        <Parameter Name="accessType" Type="Iot.Device.Card.Mifare.AccessType" />
      </Parameters>
      <Docs>
        <param name="blockNumber">The block sector to encode</param>
        <param name="accessType">The access type to encode</param>
        <summary>
            Encode the sector tailer access type for a specific block
            </summary>
        <returns>The encoded sector tailer for the specific block</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EraseSector">
      <MemberSignature Language="C#" Value="public bool EraseSector (ReadOnlySpan&lt;byte&gt; newKeyA, ReadOnlySpan&lt;byte&gt; newKeyB, byte sector, bool authenticateWithKeyA, bool resetAccessBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EraseSector(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; newKeyA, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; newKeyB, unsigned int8 sector, bool authenticateWithKeyA, bool resetAccessBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.EraseSector(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Byte,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EraseSector (newKeyA As ReadOnlySpan(Of Byte), newKeyB As ReadOnlySpan(Of Byte), sector As Byte, authenticateWithKeyA As Boolean, resetAccessBytes As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="member this.EraseSector : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * byte * bool * bool -&gt; bool" Usage="mifareCard.EraseSector (newKeyA, newKeyB, sector, authenticateWithKeyA, resetAccessBytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newKeyA" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
        <Parameter Name="newKeyB" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
        <Parameter Name="sector" Type="System.Byte" Index="2" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
        <Parameter Name="authenticateWithKeyA" Type="System.Boolean" Index="3" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
        <Parameter Name="resetAccessBytes" Type="System.Boolean" Index="4" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="newKeyA">The new key A, empty to use current one</param>
        <param name="newKeyB">The new key B, empty to use current one</param>
        <param name="sector">The sector number. Refer to Mifare documentation to understand how blocks work especially for Mifare 2K and 4K</param>
        <param name="authenticateWithKeyA">True to authenticate with current Key A, false to authenticate with Key B</param>
        <param name="resetAccessBytes">True to reset all the access bytes</param>
        <summary>
            Erase one sector
            </summary>
        <returns>True if success</returns>
        <remarks>Sector 0 can't be fully erase, only the blocks 1 and 2 will be erased</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatNdef">
      <MemberSignature Language="C#" Value="public bool FormatNdef (ReadOnlySpan&lt;byte&gt; keyB = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FormatNdef(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; keyB) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.FormatNdef(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNdef (Optional keyB As ReadOnlySpan(Of Byte) = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="member this.FormatNdef : ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="mifareCard.FormatNdef keyB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyB" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="keyB">The key B to be used for formatting, if empty, will use the default key B</param>
        <summary>
            Format the entire card to NDEF
            </summary>
        <returns>True if success</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The card size is unknown or the specified KeyB is invalid</exception>
      </Docs>
    </Member>
    <Member MemberName="FormatNdef">
      <MemberSignature Language="C#" Value="public bool FormatNdef (uint numberOfSectors, ReadOnlySpan&lt;byte&gt; keyB = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FormatNdef(unsigned int32 numberOfSectors, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; keyB) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.FormatNdef(System.UInt32,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNdef (numberOfSectors As UInteger, Optional keyB As ReadOnlySpan(Of Byte) = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="member this.FormatNdef : uint32 * ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="mifareCard.FormatNdef (numberOfSectors, keyB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfSectors" Type="System.UInt32" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="keyB" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="numberOfSectors">The number of sectors for NDEF, if zero, use the entire card</param>
        <param name="keyB">The key B to be used for formatting, if empty, will use the default key B</param>
        <summary>
            Format a portion of the card to NDEF
            </summary>
        <returns>True if success</returns>
        <remarks>The requested number of sectors are configured as NFC Forum sectors. To reserve some
            space on the card for other purposes, specify a nonzero value for <paramref name="numberOfSectors" />
            and then allocate additional applications using <see cref="T:Iot.Device.Card.Mifare.MifareDirectory" /></remarks>
        <exception cref="T:System.ArgumentException">The card size is unknown or the specified KeyB is invalid</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberBlocks">
      <MemberSignature Language="C#" Value="public int GetNumberBlocks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNumberBlocks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.GetNumberBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNumberBlocks () As Integer" />
      <MemberSignature Language="F#" Value="member this.GetNumberBlocks : unit -&gt; int" Usage="mifareCard.GetNumberBlocks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the number of blocks for a specific sector
            </summary>
        <returns>The number of blocks for this specific sector</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberBlocks">
      <MemberSignature Language="C#" Value="public byte GetNumberBlocks (byte sectorNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8 GetNumberBlocks(unsigned int8 sectorNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.GetNumberBlocks(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNumberBlocks (sectorNumber As Byte) As Byte" />
      <MemberSignature Language="F#" Value="member this.GetNumberBlocks : byte -&gt; byte" Usage="mifareCard.GetNumberBlocks sectorNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectorNumber" Type="System.Byte" Index="0" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="sectorNumber">Input sector number</param>
        <summary>
            Get the number of blocks for a specific sector
            </summary>
        <returns>The number of blocks for this specific sector</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberSectors">
      <MemberSignature Language="C#" Value="public int GetNumberSectors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNumberSectors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.GetNumberSectors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNumberSectors () As Integer" />
      <MemberSignature Language="F#" Value="member this.GetNumberSectors : unit -&gt; int" Usage="mifareCard.GetNumberSectors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the number of sectors
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFormattedNdef">
      <MemberSignature Language="C#" Value="public bool IsFormattedNdef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFormattedNdef() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.IsFormattedNdef" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFormattedNdef () As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFormattedNdef : unit -&gt; bool" Usage="mifareCard.IsFormattedNdef " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Check if the card is formatted to NDEF
            </summary>
        <returns>True if NDEF formatted</returns>
        <remarks>This checks for a Mifare application directory in sector 0 and
            (for 2K and 4K cards) sector 16, that there is an NDEF application, that
            the sector trailer is readable in all sectors in that application, and
            that the GPB byte is set correctly in the trailers.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSectorBlock">
      <MemberSignature Language="C#" Value="public bool IsSectorBlock (byte blockNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSectorBlock(unsigned int8 blockNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.IsSectorBlock(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSectorBlock (blockNumber As Byte) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSectorBlock : byte -&gt; bool" Usage="mifareCard.IsSectorBlock blockNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockNumber" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="blockNumber">Input block number</param>
        <summary>
            Is it a block sector?
            </summary>
        <returns>True if it is a sector block</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyA">
      <MemberSignature Language="C#" Value="public byte[]? KeyA { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyA" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.KeyA" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyA As Byte()" />
      <MemberSignature Language="F#" Value="member this.KeyA : byte[] with get, set" Usage="Iot.Device.Card.Mifare.MifareCard.KeyA" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Key A Used for encryption/decryption
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyB">
      <MemberSignature Language="C#" Value="public byte[]? KeyB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyB" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.KeyB" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyB As Byte()" />
      <MemberSignature Language="F#" Value="member this.KeyB : byte[] with get, set" Usage="Iot.Device.Card.Mifare.MifareCard.KeyB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Key B Used for encryption/decryption
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReselectAfterError">
      <MemberSignature Language="C#" Value="public bool ReselectAfterError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReselectAfterError" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.ReselectAfterError" />
      <MemberSignature Language="VB.NET" Value="Public Property ReselectAfterError As Boolean" />
      <MemberSignature Language="F#" Value="member this.ReselectAfterError : bool with get, set" Usage="Iot.Device.Card.Mifare.MifareCard.ReselectAfterError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Reselect the card after a card command fails
            After an error, the card will not respond to any further commands
            until it is reselected. If this property is false, the caller
            is responsible for calling ReselectCard when RunMifareCardCommand
            returns an error (-1).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReselectCard">
      <MemberSignature Language="C#" Value="public bool ReselectCard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReselectCard() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.ReselectCard" />
      <MemberSignature Language="VB.NET" Value="Public Function ReselectCard () As Boolean" />
      <MemberSignature Language="F#" Value="member this.ReselectCard : unit -&gt; bool" Usage="mifareCard.ReselectCard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Select the card. Needed if authentication or read/write failed
            </summary>
        <returns>True if success</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunMifareCardCommand">
      <MemberSignature Language="C#" Value="public int RunMifareCardCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RunMifareCardCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.RunMifareCardCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function RunMifareCardCommand () As Integer" />
      <MemberSignature Language="F#" Value="member this.RunMifareCardCommand : unit -&gt; int" Usage="mifareCard.RunMifareCardCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Run the last setup command. In case of reading bytes, they are automatically pushed into the Data property
            </summary>
        <returns>-1 if the process fails otherwise the number of bytes read</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunMifiCardCommand">
      <MemberSignature Language="C#" Value="public int RunMifiCardCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RunMifiCardCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.RunMifiCardCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function RunMifiCardCommand () As Integer" />
      <MemberSignature Language="F#" Value="member this.RunMifiCardCommand : unit -&gt; int" Usage="mifareCard.RunMifiCardCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Run the last setup command. In case of reading bytes, they are automatically pushed into the Data property
            </summary>
        <returns>-1 if the process fails otherwise the number of bytes read</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectorTailerAccess">
      <MemberSignature Language="C#" Value="public Iot.Device.Card.Mifare.AccessSector SectorTailerAccess (byte blockNumber, byte[] sectorData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Iot.Device.Card.Mifare.AccessSector SectorTailerAccess(unsigned int8 blockNumber, unsigned int8[] sectorData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.SectorTailerAccess(System.Byte,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SectorTailerAccess (blockNumber As Byte, sectorData As Byte()) As AccessSector" />
      <MemberSignature Language="F#" Value="member this.SectorTailerAccess : byte * byte[] -&gt; Iot.Device.Card.Mifare.AccessSector" Usage="mifareCard.SectorTailerAccess (blockNumber, sectorData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Card.Mifare.AccessSector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockNumber" Type="System.Byte" />
        <Parameter Name="sectorData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="blockNumber">the block sector number</param>
        <param name="sectorData">The full sector data to decode</param>
        <summary>
            Get the sector tailer access information
            </summary>
        <returns>the access sector rights</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectorToBlockNumber">
      <MemberSignature Language="C#" Value="public static byte SectorToBlockNumber (byte sector, byte group = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 SectorToBlockNumber(unsigned int8 sector, unsigned int8 group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.SectorToBlockNumber(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SectorToBlockNumber (sector As Byte, Optional group As Byte = 0) As Byte" />
      <MemberSignature Language="F#" Value="static member SectorToBlockNumber : byte * byte -&gt; byte" Usage="Iot.Device.Card.Mifare.MifareCard.SectorToBlockNumber (sector, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sector" Type="System.Byte" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="group" Type="System.Byte" Index="1" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="sector">sector number</param>
        <param name="group">group (0 to 3, where 3 is the sector trailer)</param>
        <summary>
            Determine the first block number of a specified sector and block group
            </summary>
        <returns>block number of the first (or only) block in the group</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public byte[]? SerialNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SerialNumber" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property SerialNumber As Byte()" />
      <MemberSignature Language="F#" Value="member this.SerialNumber : byte[] with get, set" Usage="Iot.Device.Card.Mifare.MifareCard.SerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            UUID is the Serial Number, called MAC sometimes
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCapacity">
      <MemberSignature Language="C#" Value="public void SetCapacity (ushort ATAQ, byte SAK);" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCapacity(unsigned int16 ATAQ, unsigned int8 SAK) cil managed" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.SetCapacity(System.UInt16,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCapacity (ATAQ As UShort, SAK As Byte)" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
      <MemberSignature Language="F#" Value="member this.SetCapacity : uint16 * byte -&gt; unit" Usage="mifareCard.SetCapacity (ATAQ, SAK)" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
      <MemberSignature Language="C#" Value="public void SetCapacity (ushort ATQA, byte SAK);" FrameworkAlternate="iot-dotnet-latest" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCapacity(unsigned int16 ATQA, unsigned int8 SAK) cil managed" FrameworkAlternate="iot-dotnet-latest" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCapacity (ATQA As UShort, SAK As Byte)" FrameworkAlternate="iot-dotnet-latest" />
      <MemberSignature Language="F#" Value="member this.SetCapacity : uint16 * byte -&gt; unit" Usage="mifareCard.SetCapacity (ATQA, SAK)" FrameworkAlternate="iot-dotnet-latest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ATAQ" Type="System.UInt16" Index="0" FrameworkAlternate="iot-dotnet-1.1;iot-dotnet-1.2;iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1" />
        <Parameter Name="ATQA" Type="System.UInt16" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="SAK" Type="System.Byte" Index="1" />
      </Parameters>
      <Docs>
        <param name="ATAQ">The ATQA response</param>
        <param name="ATQA">The ATQA response</param>
        <param name="SAK">The SAK response</param>
        <summary>
            From the ATQA and SAK data find common card capacity
            </summary>
        <remarks>Does not recognize Mifare Plus cards, capacity must be set manually</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public byte Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Target" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Card.Mifare.MifareCard.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As Byte" />
      <MemberSignature Language="F#" Value="member this.Target : byte with get, set" Usage="Iot.Device.Card.Mifare.MifareCard.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The tag number detected by the reader, only 1 or 2
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadNdefMessage">
      <MemberSignature Language="C#" Value="public bool TryReadNdefMessage (out Iot.Device.Ndef.NdefMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadNdefMessage([out] class Iot.Device.Ndef.NdefMessage&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.TryReadNdefMessage(Iot.Device.Ndef.NdefMessage@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadNdefMessage (ByRef message As NdefMessage) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryReadNdefMessage : NdefMessage -&gt; bool" Usage="mifareCard.TryReadNdefMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Iot.Device.Ndef.NdefMessage" RefType="out" Index="0" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="message">The NDEF message</param>
        <summary>
            Try to read a NDEF Message from a Mifare card
            </summary>
        <returns>True if success</returns>
        <remarks>The Mifare application directory indicates the range of sectors used for NDEF. Normally
            these begin at sector 1.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteDataBlock">
      <MemberSignature Language="C#" Value="public bool WriteDataBlock (byte block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WriteDataBlock(unsigned int8 block) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.WriteDataBlock(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteDataBlock (block As Byte) As Boolean" />
      <MemberSignature Language="F#" Value="member this.WriteDataBlock : byte -&gt; bool" Usage="mifareCard.WriteDataBlock block" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="System.Byte" Index="0" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="block">The block number to write</param>
        <summary>
            Perform a write using the 16 bytes present in Data on a specific block
            </summary>
        <returns>True if success</returns>
        <remarks>You will need to be authenticated properly before</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNdefMessage">
      <MemberSignature Language="C#" Value="public bool WriteNdefMessage (Iot.Device.Ndef.NdefMessage message, bool writeKeyA = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WriteNdefMessage(class Iot.Device.Ndef.NdefMessage message, bool writeKeyA) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Card.Mifare.MifareCard.WriteNdefMessage(Iot.Device.Ndef.NdefMessage,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteNdefMessage (message As NdefMessage, Optional writeKeyA As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="member this.WriteNdefMessage : Iot.Device.Ndef.NdefMessage * bool -&gt; bool" Usage="mifareCard.WriteNdefMessage (message, writeKeyA)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Iot.Device.Ndef.NdefMessage" Index="0" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
        <Parameter Name="writeKeyA" Type="System.Boolean" Index="1" FrameworkAlternate="iot-dotnet-1.3;iot-dotnet-1.4;iot-dotnet-1.5;iot-dotnet-2.0;iot-dotnet-2.1;iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="message">The NDEF Message to write</param>
        <param name="writeKeyA">True to write with Key A, false to write with Key B</param>
        <summary>
            Write an NDEF Message
            </summary>
        <returns>True if success</returns>
        <remarks>The Mifare application directory indicates range of sectors for NDEF. Normally,
            these begin at sector 1. The message must fit within the allocated space on the card.</remarks>
        <exception cref="T:System.ArgumentException">If using KeyB, it must be 6 bytes long</exception>
        <exception cref="T:System.InvalidOperationException">The card is not formatted for NDEF</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The message to be written is larger than the available space on the card</exception>
      </Docs>
    </Member>
  </Members>
</Type>
