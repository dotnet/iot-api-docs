<Type Name="Mcp960x" FullName="Iot.Device.Mcp960x.Mcp960x">
  <TypeSignature Language="C#" Value="public class Mcp960x : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Mcp960x extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Iot.Device.Mcp960x.Mcp960x" />
  <TypeSignature Language="VB.NET" Value="Public Class Mcp960x&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type Mcp960x = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Iot.Device.Bindings</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            MCP960X - cold-junction compensated thermocouple to digital converter
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Mcp960x (System.Device.I2c.I2cDevice i2cDevice, Iot.Device.Mcp960x.ADCMeasurementResolutionType adcMeasurementResolutionType = Iot.Device.Mcp960x.ADCMeasurementResolutionType.R18, Iot.Device.Mcp960x.BurstModeTemperatureSamplesType burstModeTemperatureSamplesType = Iot.Device.Mcp960x.BurstModeTemperatureSamplesType.S1, Iot.Device.Mcp960x.ColdJunctionResolutionType coldJunctionResolutionType = Iot.Device.Mcp960x.ColdJunctionResolutionType.N_0_0625, Iot.Device.Mcp960x.DigitalFilterCoefficientsType digitalFilterCoefficientsType = Iot.Device.Mcp960x.DigitalFilterCoefficientsType.N4, Iot.Device.Mcp960x.ShutdownModesType shutdownModesType = Iot.Device.Mcp960x.ShutdownModesType.Normal, Iot.Device.Mcp960x.ThermocoupleType thermocoupleType = Iot.Device.Mcp960x.ThermocoupleType.K);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Device.I2c.I2cDevice i2cDevice, valuetype Iot.Device.Mcp960x.ADCMeasurementResolutionType adcMeasurementResolutionType, valuetype Iot.Device.Mcp960x.BurstModeTemperatureSamplesType burstModeTemperatureSamplesType, valuetype Iot.Device.Mcp960x.ColdJunctionResolutionType coldJunctionResolutionType, valuetype Iot.Device.Mcp960x.DigitalFilterCoefficientsType digitalFilterCoefficientsType, valuetype Iot.Device.Mcp960x.ShutdownModesType shutdownModesType, valuetype Iot.Device.Mcp960x.ThermocoupleType thermocoupleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Mcp960x.Mcp960x.#ctor(System.Device.I2c.I2cDevice,Iot.Device.Mcp960x.ADCMeasurementResolutionType,Iot.Device.Mcp960x.BurstModeTemperatureSamplesType,Iot.Device.Mcp960x.ColdJunctionResolutionType,Iot.Device.Mcp960x.DigitalFilterCoefficientsType,Iot.Device.Mcp960x.ShutdownModesType,Iot.Device.Mcp960x.ThermocoupleType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (i2cDevice As I2cDevice, Optional adcMeasurementResolutionType As ADCMeasurementResolutionType = Iot.Device.Mcp960x.ADCMeasurementResolutionType.R18, Optional burstModeTemperatureSamplesType As BurstModeTemperatureSamplesType = Iot.Device.Mcp960x.BurstModeTemperatureSamplesType.S1, Optional coldJunctionResolutionType As ColdJunctionResolutionType = Iot.Device.Mcp960x.ColdJunctionResolutionType.N_0_0625, Optional digitalFilterCoefficientsType As DigitalFilterCoefficientsType = Iot.Device.Mcp960x.DigitalFilterCoefficientsType.N4, Optional shutdownModesType As ShutdownModesType = Iot.Device.Mcp960x.ShutdownModesType.Normal, Optional thermocoupleType As ThermocoupleType = Iot.Device.Mcp960x.ThermocoupleType.K)" />
      <MemberSignature Language="F#" Value="new Iot.Device.Mcp960x.Mcp960x : System.Device.I2c.I2cDevice * Iot.Device.Mcp960x.ADCMeasurementResolutionType * Iot.Device.Mcp960x.BurstModeTemperatureSamplesType * Iot.Device.Mcp960x.ColdJunctionResolutionType * Iot.Device.Mcp960x.DigitalFilterCoefficientsType * Iot.Device.Mcp960x.ShutdownModesType * Iot.Device.Mcp960x.ThermocoupleType -&gt; Iot.Device.Mcp960x.Mcp960x" Usage="new Iot.Device.Mcp960x.Mcp960x (i2cDevice, adcMeasurementResolutionType, burstModeTemperatureSamplesType, coldJunctionResolutionType, digitalFilterCoefficientsType, shutdownModesType, thermocoupleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="i2cDevice" Type="System.Device.I2c.I2cDevice" />
        <Parameter Name="adcMeasurementResolutionType" Type="Iot.Device.Mcp960x.ADCMeasurementResolutionType" />
        <Parameter Name="burstModeTemperatureSamplesType" Type="Iot.Device.Mcp960x.BurstModeTemperatureSamplesType" />
        <Parameter Name="coldJunctionResolutionType" Type="Iot.Device.Mcp960x.ColdJunctionResolutionType" />
        <Parameter Name="digitalFilterCoefficientsType" Type="Iot.Device.Mcp960x.DigitalFilterCoefficientsType" />
        <Parameter Name="shutdownModesType" Type="Iot.Device.Mcp960x.ShutdownModesType" />
        <Parameter Name="thermocoupleType" Type="Iot.Device.Mcp960x.ThermocoupleType" />
      </Parameters>
      <Docs>
        <param name="i2cDevice">The I2C device used for communication.</param>
        <param name="adcMeasurementResolutionType">ADC Measurement Resolution. It defaults to 18bit.</param>
        <param name="burstModeTemperatureSamplesType">Number of Burst Mode Temperature Samples. It defaults to 1 sample.</param>
        <param name="coldJunctionResolutionType">Cold junction resolution. It defaults to 0.0625Â°C.</param>
        <param name="digitalFilterCoefficientsType">Digital filter. It defaults to MID filter.</param>
        <param name="shutdownModesType">Shutdown Mode. It defaults to Normal operation.</param>
        <param name="thermocoupleType">Thermocouple type. It defaults to K.</param>
        <summary>
            Creates a new instance of the MCP960X.
            </summary>
        <remarks>
            alerts are disabled
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Mcp960x.Mcp960x.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="mcp960x.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetColdJunctionTemperature">
      <MemberSignature Language="C#" Value="public UnitsNet.Temperature GetColdJunctionTemperature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype UnitsNet.Temperature GetColdJunctionTemperature() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Mcp960x.Mcp960x.GetColdJunctionTemperature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColdJunctionTemperature () As Temperature" />
      <MemberSignature Language="F#" Value="member this.GetColdJunctionTemperature : unit -&gt; UnitsNet.Temperature" Usage="mcp960x.GetColdJunctionTemperature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnitsNet.Temperature</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Return cold junction / ambient temperature in Celsius
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The cold junction temperatur equals to the ambient temperature from the device
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHotJunctionTemperature">
      <MemberSignature Language="C#" Value="public UnitsNet.Temperature GetHotJunctionTemperature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype UnitsNet.Temperature GetHotJunctionTemperature() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Mcp960x.Mcp960x.GetHotJunctionTemperature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHotJunctionTemperature () As Temperature" />
      <MemberSignature Language="F#" Value="member this.GetHotJunctionTemperature : unit -&gt; UnitsNet.Temperature" Usage="mcp960x.GetHotJunctionTemperature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnitsNet.Temperature</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the error corrected thermocouple hot junction temperature without the cold junction compensation in Celsius
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The temperatur is the error corrected thermocouple hot junction temperature without the cold junction compensation
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemperature">
      <MemberSignature Language="C#" Value="public UnitsNet.Temperature GetTemperature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype UnitsNet.Temperature GetTemperature() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Mcp960x.Mcp960x.GetTemperature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTemperature () As Temperature" />
      <MemberSignature Language="F#" Value="member this.GetTemperature : unit -&gt; UnitsNet.Temperature" Usage="mcp960x.GetTemperature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnitsNet.Temperature</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns absolute thermocouple temperature in Celsius
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Returns the cold-junction compensated and error-corrected thermocouple temperature in degree Celsius
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDeviceID">
      <MemberSignature Language="C#" Value="public void ReadDeviceID (out Iot.Device.Mcp960x.DeviceIDType deviceID, out byte revisionMajor, out byte revisionMinor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadDeviceID([out] valuetype Iot.Device.Mcp960x.DeviceIDType&amp; deviceID, [out] unsigned int8&amp; revisionMajor, [out] unsigned int8&amp; revisionMinor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Mcp960x.Mcp960x.ReadDeviceID(Iot.Device.Mcp960x.DeviceIDType@,System.Byte@,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadDeviceID (ByRef deviceID As DeviceIDType, ByRef revisionMajor As Byte, ByRef revisionMinor As Byte)" />
      <MemberSignature Language="F#" Value="member this.ReadDeviceID : DeviceIDType * byte * byte -&gt; unit" Usage="mcp960x.ReadDeviceID (deviceID, revisionMajor, revisionMinor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceID" Type="Iot.Device.Mcp960x.DeviceIDType" RefType="out" />
        <Parameter Name="revisionMajor" Type="System.Byte" RefType="out" />
        <Parameter Name="revisionMinor" Type="System.Byte" RefType="out" />
      </Parameters>
      <Docs>
        <param name="deviceID">Returns the I2C device id.</param>
        <param name="revisionMajor">Returns the revision major.</param>
        <param name="revisionMinor">Returns the revision minor.</param>
        <summary>
            Return device id, revision major and revision minor
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadStatus">
      <MemberSignature Language="C#" Value="public void ReadStatus (out bool burstComplete, out bool thUpdate, out bool shortCircuit, out bool openCircuitOrInputRange, out bool Alert4Status, out bool Alert3Status, out bool Alert2Status, out bool Alert1Status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadStatus([out] bool&amp; burstComplete, [out] bool&amp; thUpdate, [out] bool&amp; shortCircuit, [out] bool&amp; openCircuitOrInputRange, [out] bool&amp; Alert4Status, [out] bool&amp; Alert3Status, [out] bool&amp; Alert2Status, [out] bool&amp; Alert1Status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Mcp960x.Mcp960x.ReadStatus(System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadStatus (ByRef burstComplete As Boolean, ByRef thUpdate As Boolean, ByRef shortCircuit As Boolean, ByRef openCircuitOrInputRange As Boolean, ByRef Alert4Status As Boolean, ByRef Alert3Status As Boolean, ByRef Alert2Status As Boolean, ByRef Alert1Status As Boolean)" />
      <MemberSignature Language="F#" Value="member this.ReadStatus : bool * bool * bool * bool * bool * bool * bool * bool -&gt; unit" Usage="mcp960x.ReadStatus (burstComplete, thUpdate, shortCircuit, openCircuitOrInputRange, Alert4Status, Alert3Status, Alert2Status, Alert1Status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="burstComplete" Type="System.Boolean" RefType="out" />
        <Parameter Name="thUpdate" Type="System.Boolean" RefType="out" />
        <Parameter Name="shortCircuit" Type="System.Boolean" RefType="out" />
        <Parameter Name="openCircuitOrInputRange" Type="System.Boolean" RefType="out" />
        <Parameter Name="Alert4Status" Type="System.Boolean" RefType="out" />
        <Parameter Name="Alert3Status" Type="System.Boolean" RefType="out" />
        <Parameter Name="Alert2Status" Type="System.Boolean" RefType="out" />
        <Parameter Name="Alert1Status" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="burstComplete">Returns the burst mode conversions status flag.</param>
        <param name="thUpdate">Returns the temperature update/conversion complete flag.</param>
        <param name="shortCircuit">MCP9601/L01/RL01 only: Returns the short circuit detection flag.</param>
        <param name="openCircuitOrInputRange">MCP960X/L0X/RL0X: Returns the temperature range detection flag - MCP9601/L01/RL01: Returns the open circuit detection flag.</param>
        <param name="Alert4Status">Returns Alert 4 status bit.</param>
        <param name="Alert3Status">Returns Alert 3 status bit.</param>
        <param name="Alert2Status">Returns Alert 2 status bit.</param>
        <param name="Alert1Status">Returns Alert 1 status bit.</param>
        <summary>
             Returns the status of the device
             </summary>
        <remarks>
             burstComplete: Once Burst mode is enabled, this bit is normally set after the first burst is complete. User can clear it and poll the bit periodically until the next burst of temperature conversions is complete
            
             thUpdate: This bit is normally set. User can clear it and poll the bit until the next temperature conversion is complete.
            
             shortCircuit:
               MCP9601/L01/RL01 only:
                 1 = Thermocouple Shorted to VDD or VSS
                 0 = Normal operation
               The VSENSE pin must be connected to the Thermocouple.
            
             openCircuitOrInputRange:
               MCP960X/L0X/RL0X:
                  1 = The ADC input Voltage (EMF) or the temperature data from the TH register exceeds the measurement range for the selected thermocouple type
                  0 = The ADC input Voltage(EMF) or the temperature data from the TH register is within the measurement range for the selected thermocouple type
                  If this bit is set, then the MCP960X/L0X/RL0X input voltage (EMF) to Degree Celsius conversion may be bypassed.
               MCP9601/L01/RL01:
                  Indicates whether the Thermocouple is disconnected from the inputs.The VSENSE pin must be connected to the Thermocouple.
            
               AlertXYZStatus:
                 Alert XYZ status bit
                   1 = TX &gt;  Temperature ALERT&lt;Y&gt;
                   0 = TX &lt;= Temperature ALERT&lt;Y&gt;
                 Where: TX is either TH or TC
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
