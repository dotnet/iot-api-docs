<Type Name="Vl53L1X" FullName="Iot.Device.Vl53L1X.Vl53L1X">
  <TypeSignature Language="C#" Value="public class Vl53L1X : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Vl53L1X extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Iot.Device.Vl53L1X.Vl53L1X" />
  <TypeSignature Language="VB.NET" Value="Public Class Vl53L1X&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type Vl53L1X = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Iot.Device.Bindings</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents Vl53L1X
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vl53L1X (System.Device.I2c.I2cDevice i2CDevice, int operationTimeoutMilliseconds = 500, bool shouldDispose = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Device.I2c.I2cDevice i2CDevice, int32 operationTimeoutMilliseconds, bool shouldDispose) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.#ctor(System.Device.I2c.I2cDevice,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (i2CDevice As I2cDevice, Optional operationTimeoutMilliseconds As Integer = 500, Optional shouldDispose As Boolean = true)" />
      <MemberSignature Language="F#" Value="new Iot.Device.Vl53L1X.Vl53L1X : System.Device.I2c.I2cDevice * int * bool -&gt; Iot.Device.Vl53L1X.Vl53L1X" Usage="new Iot.Device.Vl53L1X.Vl53L1X (i2CDevice, operationTimeoutMilliseconds, shouldDispose)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="i2CDevice" Type="System.Device.I2c.I2cDevice" />
        <Parameter Name="operationTimeoutMilliseconds" Type="System.Int32" />
        <Parameter Name="shouldDispose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="i2CDevice">The I2C Device</param>
        <param name="operationTimeoutMilliseconds">Timeout for reading data, by default 500 milliseonds</param>
        <param name="shouldDispose">True to dispose the I2C Device at dispose</param>
        <summary>
            Creates a Vl53L1X sensor class
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbientPerSpad">
      <MemberSignature Language="C#" Value="public ushort AmbientPerSpad { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 AmbientPerSpad" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.AmbientPerSpad" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AmbientPerSpad As UShort" />
      <MemberSignature Language="F#" Value="member this.AmbientPerSpad : uint16" Usage="Iot.Device.Vl53L1X.Vl53L1X.AmbientPerSpad" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the ambient per SPAD in kcps/SPAD.
            </summary>
        <value>To be added.</value>
        <remarks>
             Kcps is kilo count per second. kcps/SPAD is the return ambient rate measured by the VL53L1X.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbientRate">
      <MemberSignature Language="C#" Value="public ushort AmbientRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 AmbientRate" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.AmbientRate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AmbientRate As UShort" />
      <MemberSignature Language="F#" Value="member this.AmbientRate : uint16" Usage="Iot.Device.Vl53L1X.Vl53L1X.AmbientRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the ambient rate in kcps.
            </summary>
        <value>To be added.</value>
        <remarks>
             Kcps is kilo count per second.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BootState">
      <MemberSignature Language="C#" Value="public Iot.Device.Vl53L1X.BootState BootState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Iot.Device.Vl53L1X.BootState BootState" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.BootState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BootState As BootState" />
      <MemberSignature Language="F#" Value="member this.BootState : Iot.Device.Vl53L1X.BootState" Usage="Iot.Device.Vl53L1X.Vl53L1X.BootState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Vl53L1X.BootState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Iot.Device.Vl53L1X.Vl53L1X.BootState" /> of the device (1 = booted, 0 = not booted).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalibrateOffset">
      <MemberSignature Language="C#" Value="public short CalibrateOffset (UnitsNet.Length targetDist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int16 CalibrateOffset(valuetype UnitsNet.Length targetDist) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.CalibrateOffset(UnitsNet.Length)" />
      <MemberSignature Language="VB.NET" Value="Public Function CalibrateOffset (targetDist As Length) As Short" />
      <MemberSignature Language="F#" Value="member this.CalibrateOffset : UnitsNet.Length -&gt; int16" Usage="vl53L1X.CalibrateOffset targetDist" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDist" Type="UnitsNet.Length" />
      </Parameters>
      <Docs>
        <param name="targetDist">The Target distance, ST recommended 100 mm.</param>
        <summary>
            This function performs the offset calibration and programs the offset compensation into the device.
            Target reflectance should be grey17%.
            </summary>
        <returns>The offset value found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalibrateXtalk">
      <MemberSignature Language="C#" Value="public ushort CalibrateXtalk (UnitsNet.Length targetDist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16 CalibrateXtalk(valuetype UnitsNet.Length targetDist) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.CalibrateXtalk(UnitsNet.Length)" />
      <MemberSignature Language="VB.NET" Value="Public Function CalibrateXtalk (targetDist As Length) As UShort" />
      <MemberSignature Language="F#" Value="member this.CalibrateXtalk : UnitsNet.Length -&gt; uint16" Usage="vl53L1X.CalibrateXtalk targetDist" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDist" Type="UnitsNet.Length" />
      </Parameters>
      <Docs>
        <param name="targetDist">
            The target distance.
            This is the distance where the sensor starts to "under range"
            due to the influence of the photons reflected back from the cover glass becoming strong.
            It's also called inflection point.
            </param>
        <summary>
            This function performs the xtalk calibration and programs the xtalk compensation to the device.
            Target reflectance should be grey 17%.
            </summary>
        <returns>The xtalk value found in cps (number of photons in count per second).</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeI2CAddress">
      <MemberSignature Language="C#" Value="public static void ChangeI2CAddress (System.Device.I2c.I2cDevice i2CDevice, byte newAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangeI2CAddress(class System.Device.I2c.I2cDevice i2CDevice, unsigned int8 newAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.ChangeI2CAddress(System.Device.I2c.I2cDevice,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangeI2CAddress (i2CDevice As I2cDevice, newAddress As Byte)" />
      <MemberSignature Language="F#" Value="static member ChangeI2CAddress : System.Device.I2c.I2cDevice * byte -&gt; unit" Usage="Iot.Device.Vl53L1X.Vl53L1X.ChangeI2CAddress (i2CDevice, newAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i2CDevice" Type="System.Device.I2c.I2cDevice" />
        <Parameter Name="newAddress" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="i2CDevice">The current I2C Device</param>
        <param name="newAddress">The new I2C Address from 0x00 to 0x7F</param>
        <summary>
            The sensor can be changed for other I2C Address, this function allows to change it
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearInterrupt">
      <MemberSignature Language="C#" Value="public void ClearInterrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearInterrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.ClearInterrupt" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearInterrupt ()" />
      <MemberSignature Language="F#" Value="member this.ClearInterrupt : unit -&gt; unit" Usage="vl53L1X.ClearInterrupt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This function clears the interrupt to be called after a ranging data reading, to arm the interrupt for the next
            data ready event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultI2cAddress">
      <MemberSignature Language="C#" Value="public const ushort DefaultI2cAddress = 41;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int16 DefaultI2cAddress = (41)" />
      <MemberSignature Language="DocId" Value="F:Iot.Device.Vl53L1X.Vl53L1X.DefaultI2cAddress" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultI2cAddress As UShort  = 41" />
      <MemberSignature Language="F#" Value="val mutable DefaultI2cAddress : uint16" Usage="Iot.Device.Vl53L1X.Vl53L1X.DefaultI2cAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <MemberValue>41</MemberValue>
      <Docs>
        <summary>
            The default I2C address
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="vl53L1X.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Distance">
      <MemberSignature Language="C#" Value="public UnitsNet.Length Distance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UnitsNet.Length Distance" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.Distance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Distance As Length" />
      <MemberSignature Language="F#" Value="member this.Distance : UnitsNet.Length" Usage="Iot.Device.Vl53L1X.Vl53L1X.Distance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnitsNet.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the measured distance.
            If ranging has not been started yet, the function will automatically start the ranging feature of the device.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DistanceThresholdHigh">
      <MemberSignature Language="C#" Value="public UnitsNet.Length DistanceThresholdHigh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UnitsNet.Length DistanceThresholdHigh" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.DistanceThresholdHigh" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DistanceThresholdHigh As Length" />
      <MemberSignature Language="F#" Value="member this.DistanceThresholdHigh : UnitsNet.Length" Usage="Iot.Device.Vl53L1X.Vl53L1X.DistanceThresholdHigh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnitsNet.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the high threshold.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DistanceThresholdLow">
      <MemberSignature Language="C#" Value="public UnitsNet.Length DistanceThresholdLow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UnitsNet.Length DistanceThresholdLow" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.DistanceThresholdLow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DistanceThresholdLow As Length" />
      <MemberSignature Language="F#" Value="member this.DistanceThresholdLow : UnitsNet.Length" Usage="Iot.Device.Vl53L1X.Vl53L1X.DistanceThresholdLow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnitsNet.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the low threshold.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DistanceThresholdWindowDetectionMode">
      <MemberSignature Language="C#" Value="public Iot.Device.Vl53L1X.WindowDetectionMode DistanceThresholdWindowDetectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Iot.Device.Vl53L1X.WindowDetectionMode DistanceThresholdWindowDetectionMode" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.DistanceThresholdWindowDetectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DistanceThresholdWindowDetectionMode As WindowDetectionMode" />
      <MemberSignature Language="F#" Value="member this.DistanceThresholdWindowDetectionMode : Iot.Device.Vl53L1X.WindowDetectionMode" Usage="Iot.Device.Vl53L1X.Vl53L1X.DistanceThresholdWindowDetectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Vl53L1X.WindowDetectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the <see cref="T:Iot.Device.Vl53L1X.WindowDetectionMode" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDistance">
      <MemberSignature Language="C#" Value="public UnitsNet.Length GetDistance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype UnitsNet.Length GetDistance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.GetDistance" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDistance () As Length" />
      <MemberSignature Language="F#" Value="member this.GetDistance : unit -&gt; UnitsNet.Length" Usage="vl53L1X.GetDistance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnitsNet.Length</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the measured distance.
            If ranging has not been started yet, the function will automatically start the ranging feature of the device.
            </summary>
        <returns>Measured distance as <see cref="T:UnitsNet.Length" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterMeasurementInMs">
      <MemberSignature Language="C#" Value="public ushort InterMeasurementInMs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 InterMeasurementInMs" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.InterMeasurementInMs" />
      <MemberSignature Language="VB.NET" Value="Public Property InterMeasurementInMs As UShort" />
      <MemberSignature Language="F#" Value="member this.InterMeasurementInMs : uint16 with get, set" Usage="Iot.Device.Vl53L1X.Vl53L1X.InterMeasurementInMs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the intermeasurement period in ms.
            Intermeasurement period must be &gt;/= timing budget. This condition is not checked by the API,
            the customer has the duty to check the condition. Default = 100 ms.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterruptPolarity">
      <MemberSignature Language="C#" Value="public System.Device.Gpio.PinValue InterruptPolarity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Device.Gpio.PinValue InterruptPolarity" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.InterruptPolarity" />
      <MemberSignature Language="VB.NET" Value="Public Property InterruptPolarity As PinValue" />
      <MemberSignature Language="F#" Value="member this.InterruptPolarity : System.Device.Gpio.PinValue with get, set" Usage="Iot.Device.Vl53L1X.Vl53L1X.InterruptPolarity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Device.Gpio.PinValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This gets or sets the interrupt polarity. PinValue.High is default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRangingActive">
      <MemberSignature Language="C#" Value="public bool IsRangingActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRangingActive" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.IsRangingActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRangingActive As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRangingActive : bool" Usage="Iot.Device.Vl53L1X.Vl53L1X.IsRangingActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This function returns whether to ranging is active or not
            </summary>
        <value>True if ranging is active. Otherwise false</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public UnitsNet.Length Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UnitsNet.Length Offset" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Length" />
      <MemberSignature Language="F#" Value="member this.Offset : UnitsNet.Length with get, set" Usage="Iot.Device.Vl53L1X.Vl53L1X.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnitsNet.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the offset correction value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public Iot.Device.Vl53L1X.Precision Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Iot.Device.Vl53L1X.Precision Precision" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Precision" />
      <MemberSignature Language="F#" Value="member this.Precision : Iot.Device.Vl53L1X.Precision with get, set" Usage="Iot.Device.Vl53L1X.Vl53L1X.Precision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Vl53L1X.Precision</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the precision (1 = Short, 2 = Long).
            Short mode maximum distance is limited to 1.3m but results in a better ambient immunity.
            Long mode can range up to 4 m in the dark with a timing budget of200 ms.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeStatus">
      <MemberSignature Language="C#" Value="public Iot.Device.Vl53L1X.RangeStatus RangeStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Iot.Device.Vl53L1X.RangeStatus RangeStatus" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.RangeStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RangeStatus As RangeStatus" />
      <MemberSignature Language="F#" Value="member this.RangeStatus : Iot.Device.Vl53L1X.RangeStatus" Usage="Iot.Device.Vl53L1X.Vl53L1X.RangeStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Vl53L1X.RangeStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the <see cref="P:Iot.Device.Vl53L1X.Vl53L1X.RangeStatus" /> of the device.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Roi">
      <MemberSignature Language="C#" Value="public Iot.Device.Vl53L1X.Roi Roi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Iot.Device.Vl53L1X.Roi Roi" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.Roi" />
      <MemberSignature Language="VB.NET" Value="Public Property Roi As Roi" />
      <MemberSignature Language="F#" Value="member this.Roi : Iot.Device.Vl53L1X.Roi with get, set" Usage="Iot.Device.Vl53L1X.Vl53L1X.Roi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Vl53L1X.Roi</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="P:Iot.Device.Vl53L1X.Vl53L1X.Roi" />, the position of which is centered about the optical center.
            The smallest acceptable ROI size is 4.
            The receiving SPAD array of the sensor consists of 16x16 SPADs which covers the full FoV.
            It is possible to program a smaller ROI, with a smaller number of SPADs, to reduce the FoV for applications which
            require a narrow FoV.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoiCenter">
      <MemberSignature Language="C#" Value="public byte RoiCenter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 RoiCenter" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.RoiCenter" />
      <MemberSignature Language="VB.NET" Value="Public Property RoiCenter As Byte" />
      <MemberSignature Language="F#" Value="member this.RoiCenter : byte with get, set" Usage="Iot.Device.Vl53L1X.Vl53L1X.RoiCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This function programs the new user ROI center, please to be aware that there is no check in this function
            if the ROI center vs ROI size is out of border.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SensorId">
      <MemberSignature Language="C#" Value="public ushort SensorId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 SensorId" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.SensorId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SensorId As UShort" />
      <MemberSignature Language="F#" Value="member this.SensorId : uint16" Usage="Iot.Device.Vl53L1X.Vl53L1X.SensorId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the sensor ID which must be 0xEEAC.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDistanceThreshold">
      <MemberSignature Language="C#" Value="public void SetDistanceThreshold (UnitsNet.Length threshLow, UnitsNet.Length threshHigh, Iot.Device.Vl53L1X.WindowDetectionMode detectionMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDistanceThreshold(valuetype UnitsNet.Length threshLow, valuetype UnitsNet.Length threshHigh, valuetype Iot.Device.Vl53L1X.WindowDetectionMode detectionMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.SetDistanceThreshold(UnitsNet.Length,UnitsNet.Length,Iot.Device.Vl53L1X.WindowDetectionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDistanceThreshold (threshLow As Length, threshHigh As Length, detectionMode As WindowDetectionMode)" />
      <MemberSignature Language="F#" Value="member this.SetDistanceThreshold : UnitsNet.Length * UnitsNet.Length * Iot.Device.Vl53L1X.WindowDetectionMode -&gt; unit" Usage="vl53L1X.SetDistanceThreshold (threshLow, threshHigh, detectionMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshLow" Type="UnitsNet.Length" />
        <Parameter Name="threshHigh" Type="UnitsNet.Length" />
        <Parameter Name="detectionMode" Type="Iot.Device.Vl53L1X.WindowDetectionMode" />
      </Parameters>
      <Docs>
        <param name="threshLow">
            The threshold under which the device raises an interrupt if detectionMode =
            WindowDetectionMode.Below
            </param>
        <param name="threshHigh">
            The threshold above which the device raises an interrupt if detectionMode =
            WindowDetectionMode.Above
            </param>
        <param name="detectionMode">The <see cref="T:Iot.Device.Vl53L1X.WindowDetectionMode" /> where 0 = below, 1 = above, 2 = out, and 3 = in</param>
        <summary>
            This function programs the threshold detection mode.
            For example:
            SetDistanceThreshold(dev,100,300, WindowDetectionMode.Below): below 100
            SetDistanceThreshold(dev,100,300, WindowDetectionMode.Above): above 300
            SetDistanceThreshold(dev,100,300, WindowDetectionMode.Out): out-of-window
            SetDistanceThreshold(dev,100,300, WindowDetectionMode.In): in window
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigmaThreshold">
      <MemberSignature Language="C#" Value="public UnitsNet.Length SigmaThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype UnitsNet.Length SigmaThreshold" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.SigmaThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property SigmaThreshold As Length" />
      <MemberSignature Language="F#" Value="member this.SigmaThreshold : UnitsNet.Length with get, set" Usage="Iot.Device.Vl53L1X.Vl53L1X.SigmaThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>UnitsNet.Length</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This function programs a new sigma threshold. The default value is 15 mm.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalPerSpad">
      <MemberSignature Language="C#" Value="public ushort SignalPerSpad { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 SignalPerSpad" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.SignalPerSpad" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignalPerSpad As UShort" />
      <MemberSignature Language="F#" Value="member this.SignalPerSpad : uint16" Usage="Iot.Device.Vl53L1X.Vl53L1X.SignalPerSpad" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the signal per SPAD in kcps/SPAD.
            </summary>
        <value>To be added.</value>
        <remarks>
             Kcps is kilo count per second. kcps/SPAD is the return ambient rate measured by the VL53L1X.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalRate">
      <MemberSignature Language="C#" Value="public ushort SignalRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 SignalRate" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.SignalRate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignalRate As UShort" />
      <MemberSignature Language="F#" Value="member this.SignalRate : uint16" Usage="Iot.Device.Vl53L1X.Vl53L1X.SignalRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the signal in kcps.
            </summary>
        <value>To be added.</value>
        <remarks>
             Kcps is kilo count per second.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalThreshold">
      <MemberSignature Language="C#" Value="public ushort SignalThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 SignalThreshold" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.SignalThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property SignalThreshold As UShort" />
      <MemberSignature Language="F#" Value="member this.SignalThreshold : uint16 with get, set" Usage="Iot.Device.Vl53L1X.Vl53L1X.SignalThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a new signal threshold in kcps where the default is 1024 kcps.
            </summary>
        <value>To be added.</value>
        <remarks>
             Kcps is kilo counts per second.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpadNb">
      <MemberSignature Language="C#" Value="public ushort SpadNb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 SpadNb" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.SpadNb" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpadNb As UShort" />
      <MemberSignature Language="F#" Value="member this.SpadNb : uint16" Usage="Iot.Device.Vl53L1X.Vl53L1X.SpadNb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the current number of enabled SPADs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRanging">
      <MemberSignature Language="C#" Value="public void StartRanging ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartRanging() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.StartRanging" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartRanging ()" />
      <MemberSignature Language="F#" Value="member this.StartRanging : unit -&gt; unit" Usage="vl53L1X.StartRanging " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This function starts the ranging distance operation which is continuous.
            The clear interrupt has to be done after each "get data" to allow the interrupt to be raised when the next data are
            ready.
            1 = active high (default), 0 =active low.
            If required, use <see cref="P:Iot.Device.Vl53L1X.Vl53L1X.InterruptPolarity" /> to change the interrupt polarity.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTemperatureUpdate">
      <MemberSignature Language="C#" Value="public void StartTemperatureUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartTemperatureUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.StartTemperatureUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartTemperatureUpdate ()" />
      <MemberSignature Language="F#" Value="member this.StartTemperatureUpdate : unit -&gt; unit" Usage="vl53L1X.StartTemperatureUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This function performs the temperature calibration.
            If the sensor has been stopped for a long time, it is recommended to perform the temperature update prior to
            restarting the ranging.
            By default, the sensor can adequately handle any temperature change as long as it is running, but if the sensor is
            stopped for an extended period of time,
            a temperature compensation is advised.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRanging">
      <MemberSignature Language="C#" Value="public void StopRanging ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopRanging() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Vl53L1X.Vl53L1X.StopRanging" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopRanging ()" />
      <MemberSignature Language="F#" Value="member this.StopRanging : unit -&gt; unit" Usage="vl53L1X.StopRanging " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This function stops the ranging.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimingBudgetInMs">
      <MemberSignature Language="C#" Value="public Iot.Device.Vl53L1X.TimingBudget TimingBudgetInMs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Iot.Device.Vl53L1X.TimingBudget TimingBudgetInMs" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.TimingBudgetInMs" />
      <MemberSignature Language="VB.NET" Value="Public Property TimingBudgetInMs As TimingBudget" />
      <MemberSignature Language="F#" Value="member this.TimingBudgetInMs : Iot.Device.Vl53L1X.TimingBudget with get, set" Usage="Iot.Device.Vl53L1X.Vl53L1X.TimingBudgetInMs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Vl53L1X.TimingBudget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the timing budget in ms.
            The predefined values are 15, 33, 20, 50, 100, 200, and 500 <see cref="T:Iot.Device.Vl53L1X.TimingBudget" />.
            This property must be set after changing the <see cref="P:Iot.Device.Vl53L1X.Vl53L1X.Precision" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xtalk">
      <MemberSignature Language="C#" Value="public ushort Xtalk { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 Xtalk" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Vl53L1X.Vl53L1X.Xtalk" />
      <MemberSignature Language="VB.NET" Value="Public Property Xtalk As UShort" />
      <MemberSignature Language="F#" Value="member this.Xtalk : uint16 with get, set" Usage="Iot.Device.Vl53L1X.Vl53L1X.Xtalk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the crosstalk correction value in cps.
            This is the number of photons reflected back from the cover glass in cps.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
