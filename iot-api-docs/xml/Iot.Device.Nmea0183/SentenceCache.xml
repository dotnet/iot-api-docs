<Type Name="SentenceCache" FullName="Iot.Device.Nmea0183.SentenceCache">
  <TypeSignature Language="C#" Value="public sealed class SentenceCache : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SentenceCache extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Iot.Device.Nmea0183.SentenceCache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SentenceCache&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type SentenceCache = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Iot.Device.Bindings</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Caches the last sentence(s) of each type for later retrieval.
            This is a helper class for <see cref="T:Iot.Device.Nmea0183.AutopilotController" /> and <see cref="T:Iot.Device.Nmea0183.PositionProvider" />. Use <see cref="T:Iot.Device.Nmea0183.PositionProvider" /> to query the position from
            the most appropriate messages.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SentenceCache (Iot.Device.Nmea0183.NmeaSinkAndSource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Iot.Device.Nmea0183.NmeaSinkAndSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.#ctor(Iot.Device.Nmea0183.NmeaSinkAndSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As NmeaSinkAndSource)" />
      <MemberSignature Language="F#" Value="new Iot.Device.Nmea0183.SentenceCache : Iot.Device.Nmea0183.NmeaSinkAndSource -&gt; Iot.Device.Nmea0183.SentenceCache" Usage="new Iot.Device.Nmea0183.SentenceCache source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Iot.Device.Nmea0183.NmeaSinkAndSource" />
      </Parameters>
      <Docs>
        <param name="source">The source to monitor</param>
        <summary>
            Creates an new cache using the given source
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Iot.Device.Nmea0183.Sentences.NmeaSentence sentence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Iot.Device.Nmea0183.Sentences.NmeaSentence sentence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.Add(Iot.Device.Nmea0183.Sentences.NmeaSentence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (sentence As NmeaSentence)" />
      <MemberSignature Language="F#" Value="member this.Add : Iot.Device.Nmea0183.Sentences.NmeaSentence -&gt; unit" Usage="sentenceCache.Add sentence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sentence" Type="Iot.Device.Nmea0183.Sentences.NmeaSentence" />
      </Parameters>
      <Docs>
        <param name="sentence">Sentence to add</param>
        <summary>
            Adds the given sentence to the cache - if manual filling is preferred
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="sentenceCache.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clears the cache
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="sentenceCache.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clean up everything
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastSentence">
      <MemberSignature Language="C#" Value="public Iot.Device.Nmea0183.Sentences.NmeaSentence? GetLastSentence (Iot.Device.Nmea0183.SentenceId id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Iot.Device.Nmea0183.Sentences.NmeaSentence GetLastSentence(valuetype Iot.Device.Nmea0183.SentenceId id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.GetLastSentence(Iot.Device.Nmea0183.SentenceId)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastSentence (id As SentenceId) As NmeaSentence" />
      <MemberSignature Language="F#" Value="member this.GetLastSentence : Iot.Device.Nmea0183.SentenceId -&gt; Iot.Device.Nmea0183.Sentences.NmeaSentence" Usage="sentenceCache.GetLastSentence id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Nmea0183.Sentences.NmeaSentence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Iot.Device.Nmea0183.SentenceId" />
      </Parameters>
      <Docs>
        <param name="id">Sentence Id to query</param>
        <summary>
            Gets the last sentence of the given type.
            Does not return sentences that are part of a group (i.e. GSV, RTE)
            </summary>
        <returns>The last sentence of that type, or null.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastSentence">
      <MemberSignature Language="C#" Value="public Iot.Device.Nmea0183.Sentences.NmeaSentence? GetLastSentence (Iot.Device.Nmea0183.SentenceId id, TimeSpan maxAge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Iot.Device.Nmea0183.Sentences.NmeaSentence GetLastSentence(valuetype Iot.Device.Nmea0183.SentenceId id, valuetype System.TimeSpan maxAge) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.GetLastSentence(Iot.Device.Nmea0183.SentenceId,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastSentence (id As SentenceId, maxAge As TimeSpan) As NmeaSentence" />
      <MemberSignature Language="F#" Value="member this.GetLastSentence : Iot.Device.Nmea0183.SentenceId * TimeSpan -&gt; Iot.Device.Nmea0183.Sentences.NmeaSentence" Usage="sentenceCache.GetLastSentence (id, maxAge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Nmea0183.Sentences.NmeaSentence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Iot.Device.Nmea0183.SentenceId" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="id">Sentence Id to query</param>
        <param name="maxAge">Maximum age of the sentence</param>
        <summary>
            Gets the last sentence of the given type.
            Does not return sentences that are part of a group (i.e. GSV, RTE)
            </summary>
        <returns>The last sentence of that type, or null if none was received within the given timespan.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastSentence">
      <MemberSignature Language="C#" Value="public Iot.Device.Nmea0183.Sentences.NmeaSentence? GetLastSentence (string? source, Iot.Device.Nmea0183.SentenceId id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Iot.Device.Nmea0183.Sentences.NmeaSentence GetLastSentence(string source, valuetype Iot.Device.Nmea0183.SentenceId id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.GetLastSentence(System.String,Iot.Device.Nmea0183.SentenceId)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastSentence (source As String, id As SentenceId) As NmeaSentence" />
      <MemberSignature Language="F#" Value="member this.GetLastSentence : string * Iot.Device.Nmea0183.SentenceId -&gt; Iot.Device.Nmea0183.Sentences.NmeaSentence" Usage="sentenceCache.GetLastSentence (source, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Nmea0183.Sentences.NmeaSentence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="id" Type="Iot.Device.Nmea0183.SentenceId" Index="1" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="source">Source to query</param>
        <param name="id">Id to query</param>
        <summary>
            Gets the last sentence with the given id from the given talker.
            </summary>
        <returns>The last sentence of that type and source, null if not found</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSatellitesInView">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Iot.Device.Nmea0183.Sentences.SatelliteInfo&gt; GetSatellitesInView (out int totalNumberOfSatellites);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Iot.Device.Nmea0183.Sentences.SatelliteInfo&gt; GetSatellitesInView([out] int32&amp; totalNumberOfSatellites) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.GetSatellitesInView(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSatellitesInView (ByRef totalNumberOfSatellites As Integer) As List(Of SatelliteInfo)" />
      <MemberSignature Language="F#" Value="member this.GetSatellitesInView : int -&gt; System.Collections.Generic.List&lt;Iot.Device.Nmea0183.Sentences.SatelliteInfo&gt;" Usage="sentenceCache.GetSatellitesInView totalNumberOfSatellites" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Iot.Device.Nmea0183.Sentences.SatelliteInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalNumberOfSatellites" Type="System.Int32" RefType="out" Index="0" FrameworkAlternate="iot-dotnet-2.1" />
      </Parameters>
      <Docs>
        <param name="totalNumberOfSatellites">Total number of satellites reported.
            This number might be larger than the number of elements in the list, as there might not be enough
            slots to transfer the whole status for all satellites</param>
        <summary>
            Returns the list of satellites in view
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryActiveRouteSentences">
      <MemberSignature Language="C#" Value="public bool QueryActiveRouteSentences (out System.Collections.Generic.List&lt;Iot.Device.Nmea0183.Sentences.RoutePart&gt; routeParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool QueryActiveRouteSentences([out] class System.Collections.Generic.List`1&lt;class Iot.Device.Nmea0183.Sentences.RoutePart&gt;&amp; routeParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.QueryActiveRouteSentences(System.Collections.Generic.List{Iot.Device.Nmea0183.Sentences.RoutePart}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function QueryActiveRouteSentences (ByRef routeParts As List(Of RoutePart)) As Boolean" />
      <MemberSignature Language="F#" Value="member this.QueryActiveRouteSentences : List -&gt; bool" Usage="sentenceCache.QueryActiveRouteSentences routeParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeParts" Type="System.Collections.Generic.List&lt;Iot.Device.Nmea0183.Sentences.RoutePart&gt;" RefType="out" Index="0" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="routeParts">The list of RTE sentences</param>
        <summary>
            Returns the last RTE sentences received, to construct the active route.
            A set of at most 100 elements is returned, with the newest entry first.
            </summary>
        <returns>True if a list was found, false if no RTE messages where received</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySatellitesInView">
      <MemberSignature Language="C#" Value="public bool QuerySatellitesInView (out System.Collections.Generic.List&lt;Iot.Device.Nmea0183.Sentences.SatellitesInView&gt; sats);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool QuerySatellitesInView([out] class System.Collections.Generic.List`1&lt;class Iot.Device.Nmea0183.Sentences.SatellitesInView&gt;&amp; sats) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.QuerySatellitesInView(System.Collections.Generic.List{Iot.Device.Nmea0183.Sentences.SatellitesInView}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuerySatellitesInView (ByRef sats As List(Of SatellitesInView)) As Boolean" />
      <MemberSignature Language="F#" Value="member this.QuerySatellitesInView : List -&gt; bool" Usage="sentenceCache.QuerySatellitesInView sats" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sats" Type="System.Collections.Generic.List&lt;Iot.Device.Nmea0183.Sentences.SatellitesInView&gt;" RefType="out" Index="0" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="sats">The result</param>
        <summary>
            Returns a list of recently received <see cref="T:Iot.Device.Nmea0183.Sentences.SatellitesInView" /> (GSV) messages.
            </summary>
        <returns>True if the list was non-empty</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreRawSentences">
      <MemberSignature Language="C#" Value="public bool StoreRawSentences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreRawSentences" />
      <MemberSignature Language="DocId" Value="P:Iot.Device.Nmea0183.SentenceCache.StoreRawSentences" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreRawSentences As Boolean" />
      <MemberSignature Language="F#" Value="member this.StoreRawSentences : bool with get, set" Usage="Iot.Device.Nmea0183.SentenceCache.StoreRawSentences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True to (also) store raw sentences. Otherwise only recognized decoded sentences are stored.
            Defaults to false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCurrentPosition">
      <MemberSignature Language="C#" Value="public bool TryGetCurrentPosition (out Iot.Device.Common.GeographicPosition? position, out UnitsNet.Angle track, out UnitsNet.Speed sog, out UnitsNet.Angle? heading);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCurrentPosition([out] class Iot.Device.Common.GeographicPosition&amp; position, [out] valuetype UnitsNet.Angle&amp; track, [out] valuetype UnitsNet.Speed&amp; sog, [out] valuetype System.Nullable`1&lt;valuetype UnitsNet.Angle&gt;&amp; heading) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.TryGetCurrentPosition(Iot.Device.Common.GeographicPosition@,UnitsNet.Angle@,UnitsNet.Speed@,System.Nullable{UnitsNet.Angle}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCurrentPosition (ByRef position As GeographicPosition, ByRef track As Angle, ByRef sog As Speed, ByRef heading As Nullable(Of Angle)) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetCurrentPosition : GeographicPosition * Angle * Speed * Nullable -&gt; bool" Usage="sentenceCache.TryGetCurrentPosition (position, track, sog, heading)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Iot.Device.Common.GeographicPosition" RefType="out" Index="0" FrameworkAlternate="iot-dotnet-2.1" />
        <Parameter Name="track" Type="UnitsNet.Angle" RefType="out" Index="1" FrameworkAlternate="iot-dotnet-2.1" />
        <Parameter Name="sog" Type="UnitsNet.Speed" RefType="out" Index="2" FrameworkAlternate="iot-dotnet-2.1" />
        <Parameter Name="heading" Type="System.Nullable&lt;UnitsNet.Angle&gt;" RefType="out" Index="3" FrameworkAlternate="iot-dotnet-2.1" />
      </Parameters>
      <Docs>
        <param name="position">Current position</param>
        <param name="track">Track (course over ground)</param>
        <param name="sog">Speed over ground</param>
        <param name="heading">Vessel Heading</param>
        <summary>
            Get the current position from the latest message containing any of the relevant data parts. This does not extrapolate the position
            if the last received message is old
            </summary>
        <returns>True if a valid position is returned</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCurrentPosition">
      <MemberSignature Language="C#" Value="public bool TryGetCurrentPosition (out Iot.Device.Common.GeographicPosition? position, bool extrapolate, out UnitsNet.Angle track, out UnitsNet.Speed sog, out UnitsNet.Angle? heading);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCurrentPosition([out] class Iot.Device.Common.GeographicPosition&amp; position, bool extrapolate, [out] valuetype UnitsNet.Angle&amp; track, [out] valuetype UnitsNet.Speed&amp; sog, [out] valuetype System.Nullable`1&lt;valuetype UnitsNet.Angle&gt;&amp; heading) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.TryGetCurrentPosition(Iot.Device.Common.GeographicPosition@,System.Boolean,UnitsNet.Angle@,UnitsNet.Speed@,System.Nullable{UnitsNet.Angle}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCurrentPosition (ByRef position As GeographicPosition, extrapolate As Boolean, ByRef track As Angle, ByRef sog As Speed, ByRef heading As Nullable(Of Angle)) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetCurrentPosition : GeographicPosition * bool * Angle * Speed * Nullable -&gt; bool" Usage="sentenceCache.TryGetCurrentPosition (position, extrapolate, track, sog, heading)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Iot.Device.Common.GeographicPosition" RefType="out" Index="0" FrameworkAlternate="iot-dotnet-2.1" />
        <Parameter Name="extrapolate" Type="System.Boolean" Index="1" FrameworkAlternate="iot-dotnet-2.1" />
        <Parameter Name="track" Type="UnitsNet.Angle" RefType="out" Index="2" FrameworkAlternate="iot-dotnet-2.1" />
        <Parameter Name="sog" Type="UnitsNet.Speed" RefType="out" Index="3" FrameworkAlternate="iot-dotnet-2.1" />
        <Parameter Name="heading" Type="System.Nullable&lt;UnitsNet.Angle&gt;" RefType="out" Index="4" FrameworkAlternate="iot-dotnet-2.1" />
      </Parameters>
      <Docs>
        <param name="position">Current position</param>
        <param name="extrapolate">True to extrapolate the current position using speed and track</param>
        <param name="track">Track (course over ground)</param>
        <param name="sog">Speed over ground</param>
        <param name="heading">Vessel Heading</param>
        <summary>
            Get the current position from the latest message containing any of the relevant data parts.
            If <paramref name="extrapolate" /> is true, the speed and direction are used to extrapolate the position (many older
            GNSS receivers only deliver the position at 1Hz or less)
            </summary>
        <returns>True if a valid position is returned</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCurrentRoute">
      <MemberSignature Language="C#" Value="public Iot.Device.Nmea0183.AutopilotErrorState TryGetCurrentRoute (out System.Collections.Generic.List&lt;Iot.Device.Nmea0183.RoutePoint&gt; routeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Iot.Device.Nmea0183.AutopilotErrorState TryGetCurrentRoute([out] class System.Collections.Generic.List`1&lt;class Iot.Device.Nmea0183.RoutePoint&gt;&amp; routeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.TryGetCurrentRoute(System.Collections.Generic.List{Iot.Device.Nmea0183.RoutePoint}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCurrentRoute (ByRef routeList As List(Of RoutePoint)) As AutopilotErrorState" />
      <MemberSignature Language="F#" Value="member this.TryGetCurrentRoute : List -&gt; Iot.Device.Nmea0183.AutopilotErrorState" Usage="sentenceCache.TryGetCurrentRoute routeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iot.Device.Nmea0183.AutopilotErrorState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeList" Type="System.Collections.Generic.List&lt;Iot.Device.Nmea0183.RoutePoint&gt;" RefType="out" Index="0" FrameworkAlternate="iot-dotnet-2.1" />
      </Parameters>
      <Docs>
        <param name="routeList">The list of points along the route</param>
        <summary>
            Returns the current route
            </summary>
        <returns>The state of the route received</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetLastDinSentence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetLastDinSentence&lt;T&gt; (int hexId, out T sentence) where T : Iot.Device.Nmea0183.Sentences.NmeaSentence;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetLastDinSentence&lt;(class Iot.Device.Nmea0183.Sentences.NmeaSentence) T&gt;(int32 hexId, [out] !!T&amp; sentence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.TryGetLastDinSentence``1(System.Int32,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetLastDinSentence(Of T As NmeaSentence) (hexId As Integer, ByRef sentence As T) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetLastDinSentence : int * 'T -&gt; bool (requires 'T :&gt; Iot.Device.Nmea0183.Sentences.NmeaSentence)" Usage="sentenceCache.TryGetLastDinSentence (hexId, sentence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Iot.Device.Nmea0183.Sentences.NmeaSentence</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="hexId" Type="System.Int32" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="sentence" Type="T" RefType="out" Index="1" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the sentence to query</typeparam>
        <param name="hexId">The hexadecimal identifier for this sub-message</param>
        <param name="sentence">Receives the sentence, if any was found</param>
        <summary>
            Tries to get a DIN sentence type
            </summary>
        <returns>True on success, false if no such message was received</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetLastSentence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetLastSentence&lt;T&gt; (Iot.Device.Nmea0183.SentenceId id, out T sentence) where T : Iot.Device.Nmea0183.Sentences.NmeaSentence;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetLastSentence&lt;(class Iot.Device.Nmea0183.Sentences.NmeaSentence) T&gt;(valuetype Iot.Device.Nmea0183.SentenceId id, [out] !!T&amp; sentence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.TryGetLastSentence``1(Iot.Device.Nmea0183.SentenceId,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetLastSentence(Of T As NmeaSentence) (id As SentenceId, ByRef sentence As T) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetLastSentence : Iot.Device.Nmea0183.SentenceId * 'T -&gt; bool (requires 'T :&gt; Iot.Device.Nmea0183.Sentences.NmeaSentence)" Usage="sentenceCache.TryGetLastSentence (id, sentence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Iot.Device.Nmea0183.Sentences.NmeaSentence</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="Iot.Device.Nmea0183.SentenceId" />
        <Parameter Name="sentence" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the sentence to query</typeparam>
        <param name="id">The sentence id for T</param>
        <param name="sentence">Receives the sentence, if any was found</param>
        <summary>
            Tries to get a sentence of the given type
            </summary>
        <returns>True on success, false if no such message was received</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTransducerData">
      <MemberSignature Language="C#" Value="public bool TryGetTransducerData (string name, out Iot.Device.Nmea0183.Sentences.TransducerDataSet data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTransducerData(string name, [out] class Iot.Device.Nmea0183.Sentences.TransducerDataSet&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.TryGetTransducerData(System.String,Iot.Device.Nmea0183.Sentences.TransducerDataSet@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTransducerData (name As String, ByRef data As TransducerDataSet) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetTransducerData : string * TransducerDataSet -&gt; bool" Usage="sentenceCache.TryGetTransducerData (name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="data" Type="Iot.Device.Nmea0183.Sentences.TransducerDataSet" RefType="out" Index="1" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="name">The name of the data set. Case sensitive</param>
        <param name="data">Returns the value if it exists</param>
        <summary>
            Gets the last transducer data set (from an XDR sentence, see <see cref="T:Iot.Device.Nmea0183.Sentences.TransducerMeasurement" />) if one with the given name exists.
            </summary>
        <returns>True if a value with the given name was found, false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetWayPoint">
      <MemberSignature Language="C#" Value="public bool TryGetWayPoint (string name, out Iot.Device.Nmea0183.Sentences.Waypoint wp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetWayPoint(string name, [out] class Iot.Device.Nmea0183.Sentences.Waypoint&amp; wp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.SentenceCache.TryGetWayPoint(System.String,Iot.Device.Nmea0183.Sentences.Waypoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetWayPoint (name As String, ByRef wp As Waypoint) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetWayPoint : string * Waypoint -&gt; bool" Usage="sentenceCache.TryGetWayPoint (name, wp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="wp" Type="Iot.Device.Nmea0183.Sentences.Waypoint" RefType="out" Index="1" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="name">The name of the waypoint</param>
        <param name="wp">The return data</param>
        <summary>
            Queries the waypoint with the given name
            </summary>
        <returns>True if found, false otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
