<Type Name="NmeaUdpServer" FullName="Iot.Device.Nmea0183.NmeaUdpServer">
  <TypeSignature Language="C#" Value="public class NmeaUdpServer : Iot.Device.Nmea0183.NmeaSinkAndSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NmeaUdpServer extends Iot.Device.Nmea0183.NmeaSinkAndSource" />
  <TypeSignature Language="DocId" Value="T:Iot.Device.Nmea0183.NmeaUdpServer" />
  <TypeSignature Language="VB.NET" Value="Public Class NmeaUdpServer&#xA;Inherits NmeaSinkAndSource" />
  <TypeSignature Language="F#" Value="type NmeaUdpServer = class&#xA;    inherit NmeaSinkAndSource" />
  <AssemblyInfo>
    <AssemblyName>Iot.Device.Bindings</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Iot.Device.Nmea0183.NmeaSinkAndSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This server distributes all incoming messages via UDP. The advantage is that clients do not need to
            know the IP of the server, which is useful if DHCP keeps reassigning addresses.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NmeaUdpServer (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.NmeaUdpServer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="F#" Value="new Iot.Device.Nmea0183.NmeaUdpServer : string -&gt; Iot.Device.Nmea0183.NmeaUdpServer" Usage="new Iot.Device.Nmea0183.NmeaUdpServer name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The network source name</param>
        <summary>
            Create an UDP server with the given name on the default port 10110
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NmeaUdpServer (string name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.NmeaUdpServer.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, port As Integer)" />
      <MemberSignature Language="F#" Value="new Iot.Device.Nmea0183.NmeaUdpServer : string * int -&gt; Iot.Device.Nmea0183.NmeaUdpServer" Usage="new Iot.Device.Nmea0183.NmeaUdpServer (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">The network source name</param>
        <param name="port">The network port to use. The default is 10110</param>
        <summary>
            Create an UDP server with the given name on the given port
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NmeaUdpServer (string name, int localPort, int remotePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 localPort, int32 remotePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.NmeaUdpServer.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, localPort As Integer, remotePort As Integer)" />
      <MemberSignature Language="F#" Value="new Iot.Device.Nmea0183.NmeaUdpServer : string * int * int -&gt; Iot.Device.Nmea0183.NmeaUdpServer" Usage="new Iot.Device.Nmea0183.NmeaUdpServer (name, localPort, remotePort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="localPort" Type="System.Int32" Index="1" FrameworkAlternate="iot-dotnet-latest" />
        <Parameter Name="remotePort" Type="System.Int32" Index="2" FrameworkAlternate="iot-dotnet-latest" />
      </Parameters>
      <Docs>
        <param name="name">The network source name</param>
        <param name="localPort">The port to receive data on</param>
        <param name="remotePort">The network port to send data to (must be different than local port when communicating to a local process)</param>
        <summary>
            Create an UDP server with the given name on the given port, using an alternate outgoing port. The outgoing and incoming
            port may be equal only if the sender and the receiver are not on the same computer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalIPAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress GetLocalIPAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress GetLocalIPAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.NmeaUdpServer.GetLocalIPAddress" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalIPAddress () As IPAddress" />
      <MemberSignature Language="F#" Value="static member GetLocalIPAddress : unit -&gt; System.Net.IPAddress" Usage="Iot.Device.Nmea0183.NmeaUdpServer.GetLocalIPAddress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the default IP address to bind to
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendSentence">
      <MemberSignature Language="C#" Value="public override void SendSentence (Iot.Device.Nmea0183.NmeaSinkAndSource source, Iot.Device.Nmea0183.Sentences.NmeaSentence sentence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendSentence(class Iot.Device.Nmea0183.NmeaSinkAndSource source, class Iot.Device.Nmea0183.Sentences.NmeaSentence sentence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.NmeaUdpServer.SendSentence(Iot.Device.Nmea0183.NmeaSinkAndSource,Iot.Device.Nmea0183.Sentences.NmeaSentence)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SendSentence (source As NmeaSinkAndSource, sentence As NmeaSentence)" />
      <MemberSignature Language="F#" Value="override this.SendSentence : Iot.Device.Nmea0183.NmeaSinkAndSource * Iot.Device.Nmea0183.Sentences.NmeaSentence -&gt; unit" Usage="nmeaUdpServer.SendSentence (source, sentence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Iot.Device.Nmea0183.NmeaSinkAndSource" />
        <Parameter Name="sentence" Type="Iot.Device.Nmea0183.Sentences.NmeaSentence" />
      </Parameters>
      <Docs>
        <param name="source">The original source of the message, used i.e. for logging</param>
        <param name="sentence">The sentence to send</param>
        <summary>
            Sends the sentence to all our clients.
            If it is needed to make distinctions for what needs to be sent to which client, create
            multiple server instances. This will allow for proper filtering.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDecode">
      <MemberSignature Language="C#" Value="public override void StartDecode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StartDecode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.NmeaUdpServer.StartDecode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub StartDecode ()" />
      <MemberSignature Language="F#" Value="override this.StartDecode : unit -&gt; unit" Usage="nmeaUdpServer.StartDecode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="StopDecode">
      <MemberSignature Language="C#" Value="public override void StopDecode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StopDecode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Iot.Device.Nmea0183.NmeaUdpServer.StopDecode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub StopDecode ()" />
      <MemberSignature Language="F#" Value="override this.StopDecode : unit -&gt; unit" Usage="nmeaUdpServer.StopDecode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Iot.Device.Bindings</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
